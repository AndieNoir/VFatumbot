/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 21.0, "minX": 0.0, "maxY": 309923.0, "series": [{"data": [[0.0, 82.0], [0.1, 82.0], [0.2, 82.0], [0.3, 82.0], [0.4, 82.0], [0.5, 82.0], [0.6, 82.0], [0.7, 82.0], [0.8, 82.0], [0.9, 82.0], [1.0, 419.0], [1.1, 419.0], [1.2, 419.0], [1.3, 419.0], [1.4, 419.0], [1.5, 419.0], [1.6, 419.0], [1.7, 419.0], [1.8, 419.0], [1.9, 419.0], [2.0, 626.0], [2.1, 626.0], [2.2, 626.0], [2.3, 626.0], [2.4, 626.0], [2.5, 626.0], [2.6, 626.0], [2.7, 626.0], [2.8, 626.0], [2.9, 626.0], [3.0, 1055.0], [3.1, 1055.0], [3.2, 1055.0], [3.3, 1055.0], [3.4, 1055.0], [3.5, 1055.0], [3.6, 1055.0], [3.7, 1055.0], [3.8, 1055.0], [3.9, 1055.0], [4.0, 1119.0], [4.1, 1119.0], [4.2, 1119.0], [4.3, 1119.0], [4.4, 1119.0], [4.5, 1119.0], [4.6, 1119.0], [4.7, 1119.0], [4.8, 1119.0], [4.9, 1119.0], [5.0, 1125.0], [5.1, 1125.0], [5.2, 1125.0], [5.3, 1125.0], [5.4, 1125.0], [5.5, 1125.0], [5.6, 1125.0], [5.7, 1125.0], [5.8, 1125.0], [5.9, 1125.0], [6.0, 1540.0], [6.1, 1540.0], [6.2, 1540.0], [6.3, 1540.0], [6.4, 1540.0], [6.5, 1540.0], [6.6, 1540.0], [6.7, 1540.0], [6.8, 1540.0], [6.9, 1540.0], [7.0, 1705.0], [7.1, 1705.0], [7.2, 1705.0], [7.3, 1705.0], [7.4, 1705.0], [7.5, 1705.0], [7.6, 1705.0], [7.7, 1705.0], [7.8, 1705.0], [7.9, 1705.0], [8.0, 2021.0], [8.1, 2021.0], [8.2, 2021.0], [8.3, 2021.0], [8.4, 2021.0], [8.5, 2021.0], [8.6, 2021.0], [8.7, 2021.0], [8.8, 2021.0], [8.9, 2021.0], [9.0, 2663.0], [9.1, 2663.0], [9.2, 2663.0], [9.3, 2663.0], [9.4, 2663.0], [9.5, 2663.0], [9.6, 2663.0], [9.7, 2663.0], [9.8, 2663.0], [9.9, 2663.0], [10.0, 2705.0], [10.1, 2705.0], [10.2, 2705.0], [10.3, 2705.0], [10.4, 2705.0], [10.5, 2705.0], [10.6, 2705.0], [10.7, 2705.0], [10.8, 2705.0], [10.9, 2705.0], [11.0, 2709.0], [11.1, 2709.0], [11.2, 2709.0], [11.3, 2709.0], [11.4, 2709.0], [11.5, 2709.0], [11.6, 2709.0], [11.7, 2709.0], [11.8, 2709.0], [11.9, 2709.0], [12.0, 2773.0], [12.1, 2773.0], [12.2, 2773.0], [12.3, 2773.0], [12.4, 2773.0], [12.5, 2773.0], [12.6, 2773.0], [12.7, 2773.0], [12.8, 2773.0], [12.9, 2773.0], [13.0, 2796.0], [13.1, 2796.0], [13.2, 2796.0], [13.3, 2796.0], [13.4, 2796.0], [13.5, 2796.0], [13.6, 2796.0], [13.7, 2796.0], [13.8, 2796.0], [13.9, 2796.0], [14.0, 2815.0], [14.1, 2815.0], [14.2, 2815.0], [14.3, 2815.0], [14.4, 2815.0], [14.5, 2815.0], [14.6, 2815.0], [14.7, 2815.0], [14.8, 2815.0], [14.9, 2815.0], [15.0, 2872.0], [15.1, 2872.0], [15.2, 2872.0], [15.3, 2872.0], [15.4, 2872.0], [15.5, 2872.0], [15.6, 2872.0], [15.7, 2872.0], [15.8, 2872.0], [15.9, 2872.0], [16.0, 2885.0], [16.1, 2885.0], [16.2, 2885.0], [16.3, 2885.0], [16.4, 2885.0], [16.5, 2885.0], [16.6, 2885.0], [16.7, 2885.0], [16.8, 2885.0], [16.9, 2885.0], [17.0, 2930.0], [17.1, 2930.0], [17.2, 2930.0], [17.3, 2930.0], [17.4, 2930.0], [17.5, 2930.0], [17.6, 2930.0], [17.7, 2930.0], [17.8, 2930.0], [17.9, 2930.0], [18.0, 2989.0], [18.1, 2989.0], [18.2, 2989.0], [18.3, 2989.0], [18.4, 2989.0], [18.5, 2989.0], [18.6, 2989.0], [18.7, 2989.0], [18.8, 2989.0], [18.9, 2989.0], [19.0, 3118.0], [19.1, 3118.0], [19.2, 3118.0], [19.3, 3118.0], [19.4, 3118.0], [19.5, 3118.0], [19.6, 3118.0], [19.7, 3118.0], [19.8, 3118.0], [19.9, 3118.0], [20.0, 3199.0], [20.1, 3199.0], [20.2, 3199.0], [20.3, 3199.0], [20.4, 3199.0], [20.5, 3199.0], [20.6, 3199.0], [20.7, 3199.0], [20.8, 3199.0], [20.9, 3199.0], [21.0, 3240.0], [21.1, 3240.0], [21.2, 3240.0], [21.3, 3240.0], [21.4, 3240.0], [21.5, 3240.0], [21.6, 3240.0], [21.7, 3240.0], [21.8, 3240.0], [21.9, 3240.0], [22.0, 3372.0], [22.1, 3372.0], [22.2, 3372.0], [22.3, 3372.0], [22.4, 3372.0], [22.5, 3372.0], [22.6, 3372.0], [22.7, 3372.0], [22.8, 3372.0], [22.9, 3372.0], [23.0, 3503.0], [23.1, 3503.0], [23.2, 3503.0], [23.3, 3503.0], [23.4, 3503.0], [23.5, 3503.0], [23.6, 3503.0], [23.7, 3503.0], [23.8, 3503.0], [23.9, 3503.0], [24.0, 3965.0], [24.1, 3965.0], [24.2, 3965.0], [24.3, 3965.0], [24.4, 3965.0], [24.5, 3965.0], [24.6, 3965.0], [24.7, 3965.0], [24.8, 3965.0], [24.9, 3965.0], [25.0, 3986.0], [25.1, 3986.0], [25.2, 3986.0], [25.3, 3986.0], [25.4, 3986.0], [25.5, 3986.0], [25.6, 3986.0], [25.7, 3986.0], [25.8, 3986.0], [25.9, 3986.0], [26.0, 3989.0], [26.1, 3989.0], [26.2, 3989.0], [26.3, 3989.0], [26.4, 3989.0], [26.5, 3989.0], [26.6, 3989.0], [26.7, 3989.0], [26.8, 3989.0], [26.9, 3989.0], [27.0, 4100.0], [27.1, 4100.0], [27.2, 4100.0], [27.3, 4100.0], [27.4, 4100.0], [27.5, 4100.0], [27.6, 4100.0], [27.7, 4100.0], [27.8, 4100.0], [27.9, 4100.0], [28.0, 4115.0], [28.1, 4115.0], [28.2, 4115.0], [28.3, 4115.0], [28.4, 4115.0], [28.5, 4115.0], [28.6, 4115.0], [28.7, 4115.0], [28.8, 4115.0], [28.9, 4115.0], [29.0, 4119.0], [29.1, 4119.0], [29.2, 4119.0], [29.3, 4119.0], [29.4, 4119.0], [29.5, 4119.0], [29.6, 4119.0], [29.7, 4119.0], [29.8, 4119.0], [29.9, 4119.0], [30.0, 4177.0], [30.1, 4177.0], [30.2, 4177.0], [30.3, 4177.0], [30.4, 4177.0], [30.5, 4177.0], [30.6, 4177.0], [30.7, 4177.0], [30.8, 4177.0], [30.9, 4177.0], [31.0, 4321.0], [31.1, 4321.0], [31.2, 4321.0], [31.3, 4321.0], [31.4, 4321.0], [31.5, 4321.0], [31.6, 4321.0], [31.7, 4321.0], [31.8, 4321.0], [31.9, 4321.0], [32.0, 4651.0], [32.1, 4651.0], [32.2, 4651.0], [32.3, 4651.0], [32.4, 4651.0], [32.5, 4651.0], [32.6, 4651.0], [32.7, 4651.0], [32.8, 4651.0], [32.9, 4651.0], [33.0, 4780.0], [33.1, 4780.0], [33.2, 4780.0], [33.3, 4780.0], [33.4, 4780.0], [33.5, 4780.0], [33.6, 4780.0], [33.7, 4780.0], [33.8, 4780.0], [33.9, 4780.0], [34.0, 4844.0], [34.1, 4844.0], [34.2, 4844.0], [34.3, 4844.0], [34.4, 4844.0], [34.5, 4844.0], [34.6, 4844.0], [34.7, 4844.0], [34.8, 4844.0], [34.9, 4844.0], [35.0, 5039.0], [35.1, 5039.0], [35.2, 5039.0], [35.3, 5039.0], [35.4, 5039.0], [35.5, 5039.0], [35.6, 5039.0], [35.7, 5039.0], [35.8, 5039.0], [35.9, 5039.0], [36.0, 5051.0], [36.1, 5051.0], [36.2, 5051.0], [36.3, 5051.0], [36.4, 5051.0], [36.5, 5051.0], [36.6, 5051.0], [36.7, 5051.0], [36.8, 5051.0], [36.9, 5051.0], [37.0, 5170.0], [37.1, 5170.0], [37.2, 5170.0], [37.3, 5170.0], [37.4, 5170.0], [37.5, 5170.0], [37.6, 5170.0], [37.7, 5170.0], [37.8, 5170.0], [37.9, 5170.0], [38.0, 5185.0], [38.1, 5185.0], [38.2, 5185.0], [38.3, 5185.0], [38.4, 5185.0], [38.5, 5185.0], [38.6, 5185.0], [38.7, 5185.0], [38.8, 5185.0], [38.9, 5185.0], [39.0, 5316.0], [39.1, 5316.0], [39.2, 5316.0], [39.3, 5316.0], [39.4, 5316.0], [39.5, 5316.0], [39.6, 5316.0], [39.7, 5316.0], [39.8, 5316.0], [39.9, 5316.0], [40.0, 5412.0], [40.1, 5412.0], [40.2, 5412.0], [40.3, 5412.0], [40.4, 5412.0], [40.5, 5412.0], [40.6, 5412.0], [40.7, 5412.0], [40.8, 5412.0], [40.9, 5412.0], [41.0, 5538.0], [41.1, 5538.0], [41.2, 5538.0], [41.3, 5538.0], [41.4, 5538.0], [41.5, 5538.0], [41.6, 5538.0], [41.7, 5538.0], [41.8, 5538.0], [41.9, 5538.0], [42.0, 5556.0], [42.1, 5556.0], [42.2, 5556.0], [42.3, 5556.0], [42.4, 5556.0], [42.5, 5556.0], [42.6, 5556.0], [42.7, 5556.0], [42.8, 5556.0], [42.9, 5556.0], [43.0, 5580.0], [43.1, 5580.0], [43.2, 5580.0], [43.3, 5580.0], [43.4, 5580.0], [43.5, 5580.0], [43.6, 5580.0], [43.7, 5580.0], [43.8, 5580.0], [43.9, 5580.0], [44.0, 5705.0], [44.1, 5705.0], [44.2, 5705.0], [44.3, 5705.0], [44.4, 5705.0], [44.5, 5705.0], [44.6, 5705.0], [44.7, 5705.0], [44.8, 5705.0], [44.9, 5705.0], [45.0, 5789.0], [45.1, 5789.0], [45.2, 5789.0], [45.3, 5789.0], [45.4, 5789.0], [45.5, 5789.0], [45.6, 5789.0], [45.7, 5789.0], [45.8, 5789.0], [45.9, 5789.0], [46.0, 5825.0], [46.1, 5825.0], [46.2, 5825.0], [46.3, 5825.0], [46.4, 5825.0], [46.5, 5825.0], [46.6, 5825.0], [46.7, 5825.0], [46.8, 5825.0], [46.9, 5825.0], [47.0, 5901.0], [47.1, 5901.0], [47.2, 5901.0], [47.3, 5901.0], [47.4, 5901.0], [47.5, 5901.0], [47.6, 5901.0], [47.7, 5901.0], [47.8, 5901.0], [47.9, 5901.0], [48.0, 6066.0], [48.1, 6066.0], [48.2, 6066.0], [48.3, 6066.0], [48.4, 6066.0], [48.5, 6066.0], [48.6, 6066.0], [48.7, 6066.0], [48.8, 6066.0], [48.9, 6066.0], [49.0, 6248.0], [49.1, 6248.0], [49.2, 6248.0], [49.3, 6248.0], [49.4, 6248.0], [49.5, 6248.0], [49.6, 6248.0], [49.7, 6248.0], [49.8, 6248.0], [49.9, 6248.0], [50.0, 6294.0], [50.1, 6294.0], [50.2, 6294.0], [50.3, 6294.0], [50.4, 6294.0], [50.5, 6294.0], [50.6, 6294.0], [50.7, 6294.0], [50.8, 6294.0], [50.9, 6294.0], [51.0, 6376.0], [51.1, 6376.0], [51.2, 6376.0], [51.3, 6376.0], [51.4, 6376.0], [51.5, 6376.0], [51.6, 6376.0], [51.7, 6376.0], [51.8, 6376.0], [51.9, 6376.0], [52.0, 6467.0], [52.1, 6467.0], [52.2, 6467.0], [52.3, 6467.0], [52.4, 6467.0], [52.5, 6467.0], [52.6, 6467.0], [52.7, 6467.0], [52.8, 6467.0], [52.9, 6467.0], [53.0, 6471.0], [53.1, 6471.0], [53.2, 6471.0], [53.3, 6471.0], [53.4, 6471.0], [53.5, 6471.0], [53.6, 6471.0], [53.7, 6471.0], [53.8, 6471.0], [53.9, 6471.0], [54.0, 6478.0], [54.1, 6478.0], [54.2, 6478.0], [54.3, 6478.0], [54.4, 6478.0], [54.5, 6478.0], [54.6, 6478.0], [54.7, 6478.0], [54.8, 6478.0], [54.9, 6478.0], [55.0, 6681.0], [55.1, 6681.0], [55.2, 6681.0], [55.3, 6681.0], [55.4, 6681.0], [55.5, 6681.0], [55.6, 6681.0], [55.7, 6681.0], [55.8, 6681.0], [55.9, 6681.0], [56.0, 7008.0], [56.1, 7008.0], [56.2, 7008.0], [56.3, 7008.0], [56.4, 7008.0], [56.5, 7008.0], [56.6, 7008.0], [56.7, 7008.0], [56.8, 7008.0], [56.9, 7008.0], [57.0, 7156.0], [57.1, 7156.0], [57.2, 7156.0], [57.3, 7156.0], [57.4, 7156.0], [57.5, 7156.0], [57.6, 7156.0], [57.7, 7156.0], [57.8, 7156.0], [57.9, 7156.0], [58.0, 7234.0], [58.1, 7234.0], [58.2, 7234.0], [58.3, 7234.0], [58.4, 7234.0], [58.5, 7234.0], [58.6, 7234.0], [58.7, 7234.0], [58.8, 7234.0], [58.9, 7234.0], [59.0, 7369.0], [59.1, 7369.0], [59.2, 7369.0], [59.3, 7369.0], [59.4, 7369.0], [59.5, 7369.0], [59.6, 7369.0], [59.7, 7369.0], [59.8, 7369.0], [59.9, 7369.0], [60.0, 7429.0], [60.1, 7429.0], [60.2, 7429.0], [60.3, 7429.0], [60.4, 7429.0], [60.5, 7429.0], [60.6, 7429.0], [60.7, 7429.0], [60.8, 7429.0], [60.9, 7429.0], [61.0, 7682.0], [61.1, 7682.0], [61.2, 7682.0], [61.3, 7682.0], [61.4, 7682.0], [61.5, 7682.0], [61.6, 7682.0], [61.7, 7682.0], [61.8, 7682.0], [61.9, 7682.0], [62.0, 8001.0], [62.1, 8001.0], [62.2, 8001.0], [62.3, 8001.0], [62.4, 8001.0], [62.5, 8001.0], [62.6, 8001.0], [62.7, 8001.0], [62.8, 8001.0], [62.9, 8001.0], [63.0, 8130.0], [63.1, 8130.0], [63.2, 8130.0], [63.3, 8130.0], [63.4, 8130.0], [63.5, 8130.0], [63.6, 8130.0], [63.7, 8130.0], [63.8, 8130.0], [63.9, 8130.0], [64.0, 8218.0], [64.1, 8218.0], [64.2, 8218.0], [64.3, 8218.0], [64.4, 8218.0], [64.5, 8218.0], [64.6, 8218.0], [64.7, 8218.0], [64.8, 8218.0], [64.9, 8218.0], [65.0, 8351.0], [65.1, 8351.0], [65.2, 8351.0], [65.3, 8351.0], [65.4, 8351.0], [65.5, 8351.0], [65.6, 8351.0], [65.7, 8351.0], [65.8, 8351.0], [65.9, 8351.0], [66.0, 8352.0], [66.1, 8352.0], [66.2, 8352.0], [66.3, 8352.0], [66.4, 8352.0], [66.5, 8352.0], [66.6, 8352.0], [66.7, 8352.0], [66.8, 8352.0], [66.9, 8352.0], [67.0, 8400.0], [67.1, 8400.0], [67.2, 8400.0], [67.3, 8400.0], [67.4, 8400.0], [67.5, 8400.0], [67.6, 8400.0], [67.7, 8400.0], [67.8, 8400.0], [67.9, 8400.0], [68.0, 8656.0], [68.1, 8656.0], [68.2, 8656.0], [68.3, 8656.0], [68.4, 8656.0], [68.5, 8656.0], [68.6, 8656.0], [68.7, 8656.0], [68.8, 8656.0], [68.9, 8656.0], [69.0, 8716.0], [69.1, 8716.0], [69.2, 8716.0], [69.3, 8716.0], [69.4, 8716.0], [69.5, 8716.0], [69.6, 8716.0], [69.7, 8716.0], [69.8, 8716.0], [69.9, 8716.0], [70.0, 8876.0], [70.1, 8876.0], [70.2, 8876.0], [70.3, 8876.0], [70.4, 8876.0], [70.5, 8876.0], [70.6, 8876.0], [70.7, 8876.0], [70.8, 8876.0], [70.9, 8876.0], [71.0, 9159.0], [71.1, 9159.0], [71.2, 9159.0], [71.3, 9159.0], [71.4, 9159.0], [71.5, 9159.0], [71.6, 9159.0], [71.7, 9159.0], [71.8, 9159.0], [71.9, 9159.0], [72.0, 9187.0], [72.1, 9187.0], [72.2, 9187.0], [72.3, 9187.0], [72.4, 9187.0], [72.5, 9187.0], [72.6, 9187.0], [72.7, 9187.0], [72.8, 9187.0], [72.9, 9187.0], [73.0, 9331.0], [73.1, 9331.0], [73.2, 9331.0], [73.3, 9331.0], [73.4, 9331.0], [73.5, 9331.0], [73.6, 9331.0], [73.7, 9331.0], [73.8, 9331.0], [73.9, 9331.0], [74.0, 9376.0], [74.1, 9376.0], [74.2, 9376.0], [74.3, 9376.0], [74.4, 9376.0], [74.5, 9376.0], [74.6, 9376.0], [74.7, 9376.0], [74.8, 9376.0], [74.9, 9376.0], [75.0, 10539.0], [75.1, 10539.0], [75.2, 10539.0], [75.3, 10539.0], [75.4, 10539.0], [75.5, 10539.0], [75.6, 10539.0], [75.7, 10539.0], [75.8, 10539.0], [75.9, 10539.0], [76.0, 10595.0], [76.1, 10595.0], [76.2, 10595.0], [76.3, 10595.0], [76.4, 10595.0], [76.5, 10595.0], [76.6, 10595.0], [76.7, 10595.0], [76.8, 10595.0], [76.9, 10595.0], [77.0, 10646.0], [77.1, 10646.0], [77.2, 10646.0], [77.3, 10646.0], [77.4, 10646.0], [77.5, 10646.0], [77.6, 10646.0], [77.7, 10646.0], [77.8, 10646.0], [77.9, 10646.0], [78.0, 11075.0], [78.1, 11075.0], [78.2, 11075.0], [78.3, 11075.0], [78.4, 11075.0], [78.5, 11075.0], [78.6, 11075.0], [78.7, 11075.0], [78.8, 11075.0], [78.9, 11075.0], [79.0, 12175.0], [79.1, 12175.0], [79.2, 12175.0], [79.3, 12175.0], [79.4, 12175.0], [79.5, 12175.0], [79.6, 12175.0], [79.7, 12175.0], [79.8, 12175.0], [79.9, 12175.0], [80.0, 13149.0], [80.1, 13149.0], [80.2, 13149.0], [80.3, 13149.0], [80.4, 13149.0], [80.5, 13149.0], [80.6, 13149.0], [80.7, 13149.0], [80.8, 13149.0], [80.9, 13149.0], [81.0, 13689.0], [81.1, 13689.0], [81.2, 13689.0], [81.3, 13689.0], [81.4, 13689.0], [81.5, 13689.0], [81.6, 13689.0], [81.7, 13689.0], [81.8, 13689.0], [81.9, 13689.0], [82.0, 14570.0], [82.1, 14570.0], [82.2, 14570.0], [82.3, 14570.0], [82.4, 14570.0], [82.5, 14570.0], [82.6, 14570.0], [82.7, 14570.0], [82.8, 14570.0], [82.9, 14570.0], [83.0, 15238.0], [83.1, 15238.0], [83.2, 15238.0], [83.3, 15238.0], [83.4, 15238.0], [83.5, 15238.0], [83.6, 15238.0], [83.7, 15238.0], [83.8, 15238.0], [83.9, 15238.0], [84.0, 301288.0], [84.1, 301288.0], [84.2, 301288.0], [84.3, 301288.0], [84.4, 301288.0], [84.5, 301288.0], [84.6, 301288.0], [84.7, 301288.0], [84.8, 301288.0], [84.9, 301288.0], [85.0, 302006.0], [85.1, 302006.0], [85.2, 302006.0], [85.3, 302006.0], [85.4, 302006.0], [85.5, 302006.0], [85.6, 302006.0], [85.7, 302006.0], [85.8, 302006.0], [85.9, 302006.0], [86.0, 302338.0], [86.1, 302338.0], [86.2, 302338.0], [86.3, 302338.0], [86.4, 302338.0], [86.5, 302338.0], [86.6, 302338.0], [86.7, 302338.0], [86.8, 302338.0], [86.9, 302338.0], [87.0, 302365.0], [87.1, 302365.0], [87.2, 302365.0], [87.3, 302365.0], [87.4, 302365.0], [87.5, 302365.0], [87.6, 302365.0], [87.7, 302365.0], [87.8, 302365.0], [87.9, 302365.0], [88.0, 303741.0], [88.1, 303741.0], [88.2, 303741.0], [88.3, 303741.0], [88.4, 303741.0], [88.5, 303741.0], [88.6, 303741.0], [88.7, 303741.0], [88.8, 303741.0], [88.9, 303741.0], [89.0, 303910.0], [89.1, 303910.0], [89.2, 303910.0], [89.3, 303910.0], [89.4, 303910.0], [89.5, 303910.0], [89.6, 303910.0], [89.7, 303910.0], [89.8, 303910.0], [89.9, 303910.0], [90.0, 304176.0], [90.1, 304176.0], [90.2, 304176.0], [90.3, 304176.0], [90.4, 304176.0], [90.5, 304176.0], [90.6, 304176.0], [90.7, 304176.0], [90.8, 304176.0], [90.9, 304176.0], [91.0, 304471.0], [91.1, 304471.0], [91.2, 304471.0], [91.3, 304471.0], [91.4, 304471.0], [91.5, 304471.0], [91.6, 304471.0], [91.7, 304471.0], [91.8, 304471.0], [91.9, 304471.0], [92.0, 304546.0], [92.1, 304546.0], [92.2, 304546.0], [92.3, 304546.0], [92.4, 304546.0], [92.5, 304546.0], [92.6, 304546.0], [92.7, 304546.0], [92.8, 304546.0], [92.9, 304546.0], [93.0, 304789.0], [93.1, 304789.0], [93.2, 304789.0], [93.3, 304789.0], [93.4, 304789.0], [93.5, 304789.0], [93.6, 304789.0], [93.7, 304789.0], [93.8, 304789.0], [93.9, 304789.0], [94.0, 305580.0], [94.1, 305580.0], [94.2, 305580.0], [94.3, 305580.0], [94.4, 305580.0], [94.5, 305580.0], [94.6, 305580.0], [94.7, 305580.0], [94.8, 305580.0], [94.9, 305580.0], [95.0, 306958.0], [95.1, 306958.0], [95.2, 306958.0], [95.3, 306958.0], [95.4, 306958.0], [95.5, 306958.0], [95.6, 306958.0], [95.7, 306958.0], [95.8, 306958.0], [95.9, 306958.0], [96.0, 308505.0], [96.1, 308505.0], [96.2, 308505.0], [96.3, 308505.0], [96.4, 308505.0], [96.5, 308505.0], [96.6, 308505.0], [96.7, 308505.0], [96.8, 308505.0], [96.9, 308505.0], [97.0, 308612.0], [97.1, 308612.0], [97.2, 308612.0], [97.3, 308612.0], [97.4, 308612.0], [97.5, 308612.0], [97.6, 308612.0], [97.7, 308612.0], [97.8, 308612.0], [97.9, 308612.0], [98.0, 309836.0], [98.1, 309836.0], [98.2, 309836.0], [98.3, 309836.0], [98.4, 309836.0], [98.5, 309836.0], [98.6, 309836.0], [98.7, 309836.0], [98.8, 309836.0], [98.9, 309836.0], [99.0, 309923.0], [99.1, 309923.0], [99.2, 309923.0], [99.3, 309923.0], [99.4, 309923.0], [99.5, 309923.0], [99.6, 309923.0], [99.7, 309923.0], [99.8, 309923.0], [99.9, 309923.0]], "isOverall": false, "label": "Bot Service: Message Blind Spots", "isController": false}, {"data": [[0.0, 21.0], [0.1, 21.0], [0.2, 21.0], [0.3, 21.0], [0.4, 21.0], [0.5, 21.0], [0.6, 21.0], [0.7, 21.0], [0.8, 21.0], [0.9, 21.0], [1.0, 21.0], [1.1, 21.0], [1.2, 21.0], [1.3, 21.0], [1.4, 21.0], [1.5, 21.0], [1.6, 21.0], [1.7, 21.0], [1.8, 21.0], [1.9, 21.0], [2.0, 21.0], [2.1, 21.0], [2.2, 21.0], [2.3, 21.0], [2.4, 21.0], [2.5, 21.0], [2.6, 21.0], [2.7, 21.0], [2.8, 21.0], [2.9, 21.0], [3.0, 21.0], [3.1, 21.0], [3.2, 21.0], [3.3, 21.0], [3.4, 21.0], [3.5, 21.0], [3.6, 21.0], [3.7, 21.0], [3.8, 21.0], [3.9, 21.0], [4.0, 23.0], [4.1, 23.0], [4.2, 23.0], [4.3, 23.0], [4.4, 23.0], [4.5, 23.0], [4.6, 23.0], [4.7, 23.0], [4.8, 23.0], [4.9, 23.0], [5.0, 23.0], [5.1, 23.0], [5.2, 23.0], [5.3, 23.0], [5.4, 23.0], [5.5, 23.0], [5.6, 23.0], [5.7, 23.0], [5.8, 23.0], [5.9, 23.0], [6.0, 26.0], [6.1, 26.0], [6.2, 26.0], [6.3, 26.0], [6.4, 26.0], [6.5, 26.0], [6.6, 26.0], [6.7, 26.0], [6.8, 26.0], [6.9, 26.0], [7.0, 26.0], [7.1, 26.0], [7.2, 26.0], [7.3, 26.0], [7.4, 26.0], [7.5, 26.0], [7.6, 26.0], [7.7, 26.0], [7.8, 26.0], [7.9, 26.0], [8.0, 27.0], [8.1, 27.0], [8.2, 27.0], [8.3, 27.0], [8.4, 27.0], [8.5, 27.0], [8.6, 27.0], [8.7, 27.0], [8.8, 27.0], [8.9, 27.0], [9.0, 27.0], [9.1, 27.0], [9.2, 27.0], [9.3, 27.0], [9.4, 27.0], [9.5, 27.0], [9.6, 27.0], [9.7, 27.0], [9.8, 27.0], [9.9, 27.0], [10.0, 31.0], [10.1, 31.0], [10.2, 31.0], [10.3, 31.0], [10.4, 31.0], [10.5, 31.0], [10.6, 31.0], [10.7, 31.0], [10.8, 31.0], [10.9, 31.0], [11.0, 31.0], [11.1, 31.0], [11.2, 31.0], [11.3, 31.0], [11.4, 31.0], [11.5, 31.0], [11.6, 31.0], [11.7, 31.0], [11.8, 31.0], [11.9, 31.0], [12.0, 33.0], [12.1, 33.0], [12.2, 33.0], [12.3, 33.0], [12.4, 33.0], [12.5, 33.0], [12.6, 33.0], [12.7, 33.0], [12.8, 33.0], [12.9, 33.0], [13.0, 33.0], [13.1, 33.0], [13.2, 33.0], [13.3, 33.0], [13.4, 33.0], [13.5, 33.0], [13.6, 33.0], [13.7, 33.0], [13.8, 33.0], [13.9, 33.0], [14.0, 39.0], [14.1, 39.0], [14.2, 39.0], [14.3, 39.0], [14.4, 39.0], [14.5, 39.0], [14.6, 39.0], [14.7, 39.0], [14.8, 39.0], [14.9, 39.0], [15.0, 39.0], [15.1, 39.0], [15.2, 39.0], [15.3, 39.0], [15.4, 39.0], [15.5, 39.0], [15.6, 39.0], [15.7, 39.0], [15.8, 39.0], [15.9, 39.0], [16.0, 718.0], [16.1, 718.0], [16.2, 718.0], [16.3, 718.0], [16.4, 718.0], [16.5, 718.0], [16.6, 718.0], [16.7, 718.0], [16.8, 718.0], [16.9, 718.0], [17.0, 718.0], [17.1, 718.0], [17.2, 718.0], [17.3, 718.0], [17.4, 718.0], [17.5, 718.0], [17.6, 718.0], [17.7, 718.0], [17.8, 718.0], [17.9, 718.0], [18.0, 739.0], [18.1, 739.0], [18.2, 739.0], [18.3, 739.0], [18.4, 739.0], [18.5, 739.0], [18.6, 739.0], [18.7, 739.0], [18.8, 739.0], [18.9, 739.0], [19.0, 739.0], [19.1, 739.0], [19.2, 739.0], [19.3, 739.0], [19.4, 739.0], [19.5, 739.0], [19.6, 739.0], [19.7, 739.0], [19.8, 739.0], [19.9, 739.0], [20.0, 743.0], [20.1, 743.0], [20.2, 743.0], [20.3, 743.0], [20.4, 743.0], [20.5, 743.0], [20.6, 743.0], [20.7, 743.0], [20.8, 743.0], [20.9, 743.0], [21.0, 743.0], [21.1, 743.0], [21.2, 743.0], [21.3, 743.0], [21.4, 743.0], [21.5, 743.0], [21.6, 743.0], [21.7, 743.0], [21.8, 743.0], [21.9, 743.0], [22.0, 777.0], [22.1, 777.0], [22.2, 777.0], [22.3, 777.0], [22.4, 777.0], [22.5, 777.0], [22.6, 777.0], [22.7, 777.0], [22.8, 777.0], [22.9, 777.0], [23.0, 777.0], [23.1, 777.0], [23.2, 777.0], [23.3, 777.0], [23.4, 777.0], [23.5, 777.0], [23.6, 777.0], [23.7, 777.0], [23.8, 777.0], [23.9, 777.0], [24.0, 811.0], [24.1, 811.0], [24.2, 811.0], [24.3, 811.0], [24.4, 811.0], [24.5, 811.0], [24.6, 811.0], [24.7, 811.0], [24.8, 811.0], [24.9, 811.0], [25.0, 811.0], [25.1, 811.0], [25.2, 811.0], [25.3, 811.0], [25.4, 811.0], [25.5, 811.0], [25.6, 811.0], [25.7, 811.0], [25.8, 811.0], [25.9, 811.0], [26.0, 815.0], [26.1, 815.0], [26.2, 815.0], [26.3, 815.0], [26.4, 815.0], [26.5, 815.0], [26.6, 815.0], [26.7, 815.0], [26.8, 815.0], [26.9, 815.0], [27.0, 815.0], [27.1, 815.0], [27.2, 815.0], [27.3, 815.0], [27.4, 815.0], [27.5, 815.0], [27.6, 815.0], [27.7, 815.0], [27.8, 815.0], [27.9, 815.0], [28.0, 854.0], [28.1, 854.0], [28.2, 854.0], [28.3, 854.0], [28.4, 854.0], [28.5, 854.0], [28.6, 854.0], [28.7, 854.0], [28.8, 854.0], [28.9, 854.0], [29.0, 854.0], [29.1, 854.0], [29.2, 854.0], [29.3, 854.0], [29.4, 854.0], [29.5, 854.0], [29.6, 854.0], [29.7, 854.0], [29.8, 854.0], [29.9, 854.0], [30.0, 904.0], [30.1, 904.0], [30.2, 904.0], [30.3, 904.0], [30.4, 904.0], [30.5, 904.0], [30.6, 904.0], [30.7, 904.0], [30.8, 904.0], [30.9, 904.0], [31.0, 904.0], [31.1, 904.0], [31.2, 904.0], [31.3, 904.0], [31.4, 904.0], [31.5, 904.0], [31.6, 904.0], [31.7, 904.0], [31.8, 904.0], [31.9, 904.0], [32.0, 919.0], [32.1, 919.0], [32.2, 919.0], [32.3, 919.0], [32.4, 919.0], [32.5, 919.0], [32.6, 919.0], [32.7, 919.0], [32.8, 919.0], [32.9, 919.0], [33.0, 919.0], [33.1, 919.0], [33.2, 919.0], [33.3, 919.0], [33.4, 919.0], [33.5, 919.0], [33.6, 919.0], [33.7, 919.0], [33.8, 919.0], [33.9, 919.0], [34.0, 953.0], [34.1, 953.0], [34.2, 953.0], [34.3, 953.0], [34.4, 953.0], [34.5, 953.0], [34.6, 953.0], [34.7, 953.0], [34.8, 953.0], [34.9, 953.0], [35.0, 953.0], [35.1, 953.0], [35.2, 953.0], [35.3, 953.0], [35.4, 953.0], [35.5, 953.0], [35.6, 953.0], [35.7, 953.0], [35.8, 953.0], [35.9, 953.0], [36.0, 958.0], [36.1, 958.0], [36.2, 958.0], [36.3, 958.0], [36.4, 958.0], [36.5, 958.0], [36.6, 958.0], [36.7, 958.0], [36.8, 958.0], [36.9, 958.0], [37.0, 958.0], [37.1, 958.0], [37.2, 958.0], [37.3, 958.0], [37.4, 958.0], [37.5, 958.0], [37.6, 958.0], [37.7, 958.0], [37.8, 958.0], [37.9, 958.0], [38.0, 972.0], [38.1, 972.0], [38.2, 972.0], [38.3, 972.0], [38.4, 972.0], [38.5, 972.0], [38.6, 972.0], [38.7, 972.0], [38.8, 972.0], [38.9, 972.0], [39.0, 972.0], [39.1, 972.0], [39.2, 972.0], [39.3, 972.0], [39.4, 972.0], [39.5, 972.0], [39.6, 972.0], [39.7, 972.0], [39.8, 972.0], [39.9, 972.0], [40.0, 981.0], [40.1, 981.0], [40.2, 981.0], [40.3, 981.0], [40.4, 981.0], [40.5, 981.0], [40.6, 981.0], [40.7, 981.0], [40.8, 981.0], [40.9, 981.0], [41.0, 981.0], [41.1, 981.0], [41.2, 981.0], [41.3, 981.0], [41.4, 981.0], [41.5, 981.0], [41.6, 981.0], [41.7, 981.0], [41.8, 981.0], [41.9, 981.0], [42.0, 1206.0], [42.1, 1206.0], [42.2, 1206.0], [42.3, 1206.0], [42.4, 1206.0], [42.5, 1206.0], [42.6, 1206.0], [42.7, 1206.0], [42.8, 1206.0], [42.9, 1206.0], [43.0, 1206.0], [43.1, 1206.0], [43.2, 1206.0], [43.3, 1206.0], [43.4, 1206.0], [43.5, 1206.0], [43.6, 1206.0], [43.7, 1206.0], [43.8, 1206.0], [43.9, 1206.0], [44.0, 1318.0], [44.1, 1318.0], [44.2, 1318.0], [44.3, 1318.0], [44.4, 1318.0], [44.5, 1318.0], [44.6, 1318.0], [44.7, 1318.0], [44.8, 1318.0], [44.9, 1318.0], [45.0, 1318.0], [45.1, 1318.0], [45.2, 1318.0], [45.3, 1318.0], [45.4, 1318.0], [45.5, 1318.0], [45.6, 1318.0], [45.7, 1318.0], [45.8, 1318.0], [45.9, 1318.0], [46.0, 1372.0], [46.1, 1372.0], [46.2, 1372.0], [46.3, 1372.0], [46.4, 1372.0], [46.5, 1372.0], [46.6, 1372.0], [46.7, 1372.0], [46.8, 1372.0], [46.9, 1372.0], [47.0, 1372.0], [47.1, 1372.0], [47.2, 1372.0], [47.3, 1372.0], [47.4, 1372.0], [47.5, 1372.0], [47.6, 1372.0], [47.7, 1372.0], [47.8, 1372.0], [47.9, 1372.0], [48.0, 1946.0], [48.1, 1946.0], [48.2, 1946.0], [48.3, 1946.0], [48.4, 1946.0], [48.5, 1946.0], [48.6, 1946.0], [48.7, 1946.0], [48.8, 1946.0], [48.9, 1946.0], [49.0, 1946.0], [49.1, 1946.0], [49.2, 1946.0], [49.3, 1946.0], [49.4, 1946.0], [49.5, 1946.0], [49.6, 1946.0], [49.7, 1946.0], [49.8, 1946.0], [49.9, 1946.0], [50.0, 1963.0], [50.1, 1963.0], [50.2, 1963.0], [50.3, 1963.0], [50.4, 1963.0], [50.5, 1963.0], [50.6, 1963.0], [50.7, 1963.0], [50.8, 1963.0], [50.9, 1963.0], [51.0, 1963.0], [51.1, 1963.0], [51.2, 1963.0], [51.3, 1963.0], [51.4, 1963.0], [51.5, 1963.0], [51.6, 1963.0], [51.7, 1963.0], [51.8, 1963.0], [51.9, 1963.0], [52.0, 1966.0], [52.1, 1966.0], [52.2, 1966.0], [52.3, 1966.0], [52.4, 1966.0], [52.5, 1966.0], [52.6, 1966.0], [52.7, 1966.0], [52.8, 1966.0], [52.9, 1966.0], [53.0, 1966.0], [53.1, 1966.0], [53.2, 1966.0], [53.3, 1966.0], [53.4, 1966.0], [53.5, 1966.0], [53.6, 1966.0], [53.7, 1966.0], [53.8, 1966.0], [53.9, 1966.0], [54.0, 1967.0], [54.1, 1967.0], [54.2, 1967.0], [54.3, 1967.0], [54.4, 1967.0], [54.5, 1967.0], [54.6, 1967.0], [54.7, 1967.0], [54.8, 1967.0], [54.9, 1967.0], [55.0, 1967.0], [55.1, 1967.0], [55.2, 1967.0], [55.3, 1967.0], [55.4, 1967.0], [55.5, 1967.0], [55.6, 1967.0], [55.7, 1967.0], [55.8, 1967.0], [55.9, 1967.0], [56.0, 2187.0], [56.1, 2187.0], [56.2, 2187.0], [56.3, 2187.0], [56.4, 2187.0], [56.5, 2187.0], [56.6, 2187.0], [56.7, 2187.0], [56.8, 2187.0], [56.9, 2187.0], [57.0, 2187.0], [57.1, 2187.0], [57.2, 2187.0], [57.3, 2187.0], [57.4, 2187.0], [57.5, 2187.0], [57.6, 2187.0], [57.7, 2187.0], [57.8, 2187.0], [57.9, 2187.0], [58.0, 2221.0], [58.1, 2221.0], [58.2, 2221.0], [58.3, 2221.0], [58.4, 2221.0], [58.5, 2221.0], [58.6, 2221.0], [58.7, 2221.0], [58.8, 2221.0], [58.9, 2221.0], [59.0, 2221.0], [59.1, 2221.0], [59.2, 2221.0], [59.3, 2221.0], [59.4, 2221.0], [59.5, 2221.0], [59.6, 2221.0], [59.7, 2221.0], [59.8, 2221.0], [59.9, 2221.0], [60.0, 2247.0], [60.1, 2247.0], [60.2, 2247.0], [60.3, 2247.0], [60.4, 2247.0], [60.5, 2247.0], [60.6, 2247.0], [60.7, 2247.0], [60.8, 2247.0], [60.9, 2247.0], [61.0, 2247.0], [61.1, 2247.0], [61.2, 2247.0], [61.3, 2247.0], [61.4, 2247.0], [61.5, 2247.0], [61.6, 2247.0], [61.7, 2247.0], [61.8, 2247.0], [61.9, 2247.0], [62.0, 2975.0], [62.1, 2975.0], [62.2, 2975.0], [62.3, 2975.0], [62.4, 2975.0], [62.5, 2975.0], [62.6, 2975.0], [62.7, 2975.0], [62.8, 2975.0], [62.9, 2975.0], [63.0, 2975.0], [63.1, 2975.0], [63.2, 2975.0], [63.3, 2975.0], [63.4, 2975.0], [63.5, 2975.0], [63.6, 2975.0], [63.7, 2975.0], [63.8, 2975.0], [63.9, 2975.0], [64.0, 3048.0], [64.1, 3048.0], [64.2, 3048.0], [64.3, 3048.0], [64.4, 3048.0], [64.5, 3048.0], [64.6, 3048.0], [64.7, 3048.0], [64.8, 3048.0], [64.9, 3048.0], [65.0, 3048.0], [65.1, 3048.0], [65.2, 3048.0], [65.3, 3048.0], [65.4, 3048.0], [65.5, 3048.0], [65.6, 3048.0], [65.7, 3048.0], [65.8, 3048.0], [65.9, 3048.0], [66.0, 3085.0], [66.1, 3085.0], [66.2, 3085.0], [66.3, 3085.0], [66.4, 3085.0], [66.5, 3085.0], [66.6, 3085.0], [66.7, 3085.0], [66.8, 3085.0], [66.9, 3085.0], [67.0, 3085.0], [67.1, 3085.0], [67.2, 3085.0], [67.3, 3085.0], [67.4, 3085.0], [67.5, 3085.0], [67.6, 3085.0], [67.7, 3085.0], [67.8, 3085.0], [67.9, 3085.0], [68.0, 3281.0], [68.1, 3281.0], [68.2, 3281.0], [68.3, 3281.0], [68.4, 3281.0], [68.5, 3281.0], [68.6, 3281.0], [68.7, 3281.0], [68.8, 3281.0], [68.9, 3281.0], [69.0, 3281.0], [69.1, 3281.0], [69.2, 3281.0], [69.3, 3281.0], [69.4, 3281.0], [69.5, 3281.0], [69.6, 3281.0], [69.7, 3281.0], [69.8, 3281.0], [69.9, 3281.0], [70.0, 3320.0], [70.1, 3320.0], [70.2, 3320.0], [70.3, 3320.0], [70.4, 3320.0], [70.5, 3320.0], [70.6, 3320.0], [70.7, 3320.0], [70.8, 3320.0], [70.9, 3320.0], [71.0, 3320.0], [71.1, 3320.0], [71.2, 3320.0], [71.3, 3320.0], [71.4, 3320.0], [71.5, 3320.0], [71.6, 3320.0], [71.7, 3320.0], [71.8, 3320.0], [71.9, 3320.0], [72.0, 3348.0], [72.1, 3348.0], [72.2, 3348.0], [72.3, 3348.0], [72.4, 3348.0], [72.5, 3348.0], [72.6, 3348.0], [72.7, 3348.0], [72.8, 3348.0], [72.9, 3348.0], [73.0, 3348.0], [73.1, 3348.0], [73.2, 3348.0], [73.3, 3348.0], [73.4, 3348.0], [73.5, 3348.0], [73.6, 3348.0], [73.7, 3348.0], [73.8, 3348.0], [73.9, 3348.0], [74.0, 3498.0], [74.1, 3498.0], [74.2, 3498.0], [74.3, 3498.0], [74.4, 3498.0], [74.5, 3498.0], [74.6, 3498.0], [74.7, 3498.0], [74.8, 3498.0], [74.9, 3498.0], [75.0, 3498.0], [75.1, 3498.0], [75.2, 3498.0], [75.3, 3498.0], [75.4, 3498.0], [75.5, 3498.0], [75.6, 3498.0], [75.7, 3498.0], [75.8, 3498.0], [75.9, 3498.0], [76.0, 3673.0], [76.1, 3673.0], [76.2, 3673.0], [76.3, 3673.0], [76.4, 3673.0], [76.5, 3673.0], [76.6, 3673.0], [76.7, 3673.0], [76.8, 3673.0], [76.9, 3673.0], [77.0, 3673.0], [77.1, 3673.0], [77.2, 3673.0], [77.3, 3673.0], [77.4, 3673.0], [77.5, 3673.0], [77.6, 3673.0], [77.7, 3673.0], [77.8, 3673.0], [77.9, 3673.0], [78.0, 4212.0], [78.1, 4212.0], [78.2, 4212.0], [78.3, 4212.0], [78.4, 4212.0], [78.5, 4212.0], [78.6, 4212.0], [78.7, 4212.0], [78.8, 4212.0], [78.9, 4212.0], [79.0, 4212.0], [79.1, 4212.0], [79.2, 4212.0], [79.3, 4212.0], [79.4, 4212.0], [79.5, 4212.0], [79.6, 4212.0], [79.7, 4212.0], [79.8, 4212.0], [79.9, 4212.0], [80.0, 4232.0], [80.1, 4232.0], [80.2, 4232.0], [80.3, 4232.0], [80.4, 4232.0], [80.5, 4232.0], [80.6, 4232.0], [80.7, 4232.0], [80.8, 4232.0], [80.9, 4232.0], [81.0, 4232.0], [81.1, 4232.0], [81.2, 4232.0], [81.3, 4232.0], [81.4, 4232.0], [81.5, 4232.0], [81.6, 4232.0], [81.7, 4232.0], [81.8, 4232.0], [81.9, 4232.0], [82.0, 4290.0], [82.1, 4290.0], [82.2, 4290.0], [82.3, 4290.0], [82.4, 4290.0], [82.5, 4290.0], [82.6, 4290.0], [82.7, 4290.0], [82.8, 4290.0], [82.9, 4290.0], [83.0, 4290.0], [83.1, 4290.0], [83.2, 4290.0], [83.3, 4290.0], [83.4, 4290.0], [83.5, 4290.0], [83.6, 4290.0], [83.7, 4290.0], [83.8, 4290.0], [83.9, 4290.0], [84.0, 4364.0], [84.1, 4364.0], [84.2, 4364.0], [84.3, 4364.0], [84.4, 4364.0], [84.5, 4364.0], [84.6, 4364.0], [84.7, 4364.0], [84.8, 4364.0], [84.9, 4364.0], [85.0, 4364.0], [85.1, 4364.0], [85.2, 4364.0], [85.3, 4364.0], [85.4, 4364.0], [85.5, 4364.0], [85.6, 4364.0], [85.7, 4364.0], [85.8, 4364.0], [85.9, 4364.0], [86.0, 4366.0], [86.1, 4366.0], [86.2, 4366.0], [86.3, 4366.0], [86.4, 4366.0], [86.5, 4366.0], [86.6, 4366.0], [86.7, 4366.0], [86.8, 4366.0], [86.9, 4366.0], [87.0, 4366.0], [87.1, 4366.0], [87.2, 4366.0], [87.3, 4366.0], [87.4, 4366.0], [87.5, 4366.0], [87.6, 4366.0], [87.7, 4366.0], [87.8, 4366.0], [87.9, 4366.0], [88.0, 4467.0], [88.1, 4467.0], [88.2, 4467.0], [88.3, 4467.0], [88.4, 4467.0], [88.5, 4467.0], [88.6, 4467.0], [88.7, 4467.0], [88.8, 4467.0], [88.9, 4467.0], [89.0, 4467.0], [89.1, 4467.0], [89.2, 4467.0], [89.3, 4467.0], [89.4, 4467.0], [89.5, 4467.0], [89.6, 4467.0], [89.7, 4467.0], [89.8, 4467.0], [89.9, 4467.0], [90.0, 4722.0], [90.1, 4722.0], [90.2, 4722.0], [90.3, 4722.0], [90.4, 4722.0], [90.5, 4722.0], [90.6, 4722.0], [90.7, 4722.0], [90.8, 4722.0], [90.9, 4722.0], [91.0, 4722.0], [91.1, 4722.0], [91.2, 4722.0], [91.3, 4722.0], [91.4, 4722.0], [91.5, 4722.0], [91.6, 4722.0], [91.7, 4722.0], [91.8, 4722.0], [91.9, 4722.0], [92.0, 4753.0], [92.1, 4753.0], [92.2, 4753.0], [92.3, 4753.0], [92.4, 4753.0], [92.5, 4753.0], [92.6, 4753.0], [92.7, 4753.0], [92.8, 4753.0], [92.9, 4753.0], [93.0, 4753.0], [93.1, 4753.0], [93.2, 4753.0], [93.3, 4753.0], [93.4, 4753.0], [93.5, 4753.0], [93.6, 4753.0], [93.7, 4753.0], [93.8, 4753.0], [93.9, 4753.0], [94.0, 4853.0], [94.1, 4853.0], [94.2, 4853.0], [94.3, 4853.0], [94.4, 4853.0], [94.5, 4853.0], [94.6, 4853.0], [94.7, 4853.0], [94.8, 4853.0], [94.9, 4853.0], [95.0, 4853.0], [95.1, 4853.0], [95.2, 4853.0], [95.3, 4853.0], [95.4, 4853.0], [95.5, 4853.0], [95.6, 4853.0], [95.7, 4853.0], [95.8, 4853.0], [95.9, 4853.0], [96.0, 5392.0], [96.1, 5392.0], [96.2, 5392.0], [96.3, 5392.0], [96.4, 5392.0], [96.5, 5392.0], [96.6, 5392.0], [96.7, 5392.0], [96.8, 5392.0], [96.9, 5392.0], [97.0, 5392.0], [97.1, 5392.0], [97.2, 5392.0], [97.3, 5392.0], [97.4, 5392.0], [97.5, 5392.0], [97.6, 5392.0], [97.7, 5392.0], [97.8, 5392.0], [97.9, 5392.0], [98.0, 8661.0], [98.1, 8661.0], [98.2, 8661.0], [98.3, 8661.0], [98.4, 8661.0], [98.5, 8661.0], [98.6, 8661.0], [98.7, 8661.0], [98.8, 8661.0], [98.9, 8661.0], [99.0, 8661.0], [99.1, 8661.0], [99.2, 8661.0], [99.3, 8661.0], [99.4, 8661.0], [99.5, 8661.0], [99.6, 8661.0], [99.7, 8661.0], [99.8, 8661.0], [99.9, 8661.0]], "isOverall": false, "label": "Bot Service: Message Attractor", "isController": false}, {"data": [[0.0, 3009.0], [0.1, 3009.0], [0.2, 3009.0], [0.3, 3009.0], [0.4, 3009.0], [0.5, 3009.0], [0.6, 3009.0], [0.7, 3009.0], [0.8, 3009.0], [0.9, 3009.0], [1.0, 3009.0], [1.1, 3009.0], [1.2, 3009.0], [1.3, 3009.0], [1.4, 3009.0], [1.5, 3009.0], [1.6, 3009.0], [1.7, 3009.0], [1.8, 3009.0], [1.9, 3009.0], [2.0, 3179.0], [2.1, 3179.0], [2.2, 3179.0], [2.3, 3179.0], [2.4, 3179.0], [2.5, 3179.0], [2.6, 3179.0], [2.7, 3179.0], [2.8, 3179.0], [2.9, 3179.0], [3.0, 3179.0], [3.1, 3179.0], [3.2, 3179.0], [3.3, 3179.0], [3.4, 3179.0], [3.5, 3179.0], [3.6, 3179.0], [3.7, 3179.0], [3.8, 3179.0], [3.9, 3179.0], [4.0, 3197.0], [4.1, 3197.0], [4.2, 3197.0], [4.3, 3197.0], [4.4, 3197.0], [4.5, 3197.0], [4.6, 3197.0], [4.7, 3197.0], [4.8, 3197.0], [4.9, 3197.0], [5.0, 3197.0], [5.1, 3197.0], [5.2, 3197.0], [5.3, 3197.0], [5.4, 3197.0], [5.5, 3197.0], [5.6, 3197.0], [5.7, 3197.0], [5.8, 3197.0], [5.9, 3197.0], [6.0, 3217.0], [6.1, 3217.0], [6.2, 3217.0], [6.3, 3217.0], [6.4, 3217.0], [6.5, 3217.0], [6.6, 3217.0], [6.7, 3217.0], [6.8, 3217.0], [6.9, 3217.0], [7.0, 3217.0], [7.1, 3217.0], [7.2, 3217.0], [7.3, 3217.0], [7.4, 3217.0], [7.5, 3217.0], [7.6, 3217.0], [7.7, 3217.0], [7.8, 3217.0], [7.9, 3217.0], [8.0, 3228.0], [8.1, 3228.0], [8.2, 3228.0], [8.3, 3228.0], [8.4, 3228.0], [8.5, 3228.0], [8.6, 3228.0], [8.7, 3228.0], [8.8, 3228.0], [8.9, 3228.0], [9.0, 3228.0], [9.1, 3228.0], [9.2, 3228.0], [9.3, 3228.0], [9.4, 3228.0], [9.5, 3228.0], [9.6, 3228.0], [9.7, 3228.0], [9.8, 3228.0], [9.9, 3228.0], [10.0, 3256.0], [10.1, 3256.0], [10.2, 3256.0], [10.3, 3256.0], [10.4, 3256.0], [10.5, 3256.0], [10.6, 3256.0], [10.7, 3256.0], [10.8, 3256.0], [10.9, 3256.0], [11.0, 3256.0], [11.1, 3256.0], [11.2, 3256.0], [11.3, 3256.0], [11.4, 3256.0], [11.5, 3256.0], [11.6, 3256.0], [11.7, 3256.0], [11.8, 3256.0], [11.9, 3256.0], [12.0, 3257.0], [12.1, 3257.0], [12.2, 3257.0], [12.3, 3257.0], [12.4, 3257.0], [12.5, 3257.0], [12.6, 3257.0], [12.7, 3257.0], [12.8, 3257.0], [12.9, 3257.0], [13.0, 3257.0], [13.1, 3257.0], [13.2, 3257.0], [13.3, 3257.0], [13.4, 3257.0], [13.5, 3257.0], [13.6, 3257.0], [13.7, 3257.0], [13.8, 3257.0], [13.9, 3257.0], [14.0, 3388.0], [14.1, 3388.0], [14.2, 3388.0], [14.3, 3388.0], [14.4, 3388.0], [14.5, 3388.0], [14.6, 3388.0], [14.7, 3388.0], [14.8, 3388.0], [14.9, 3388.0], [15.0, 3388.0], [15.1, 3388.0], [15.2, 3388.0], [15.3, 3388.0], [15.4, 3388.0], [15.5, 3388.0], [15.6, 3388.0], [15.7, 3388.0], [15.8, 3388.0], [15.9, 3388.0], [16.0, 3410.0], [16.1, 3410.0], [16.2, 3410.0], [16.3, 3410.0], [16.4, 3410.0], [16.5, 3410.0], [16.6, 3410.0], [16.7, 3410.0], [16.8, 3410.0], [16.9, 3410.0], [17.0, 3410.0], [17.1, 3410.0], [17.2, 3410.0], [17.3, 3410.0], [17.4, 3410.0], [17.5, 3410.0], [17.6, 3410.0], [17.7, 3410.0], [17.8, 3410.0], [17.9, 3410.0], [18.0, 3440.0], [18.1, 3440.0], [18.2, 3440.0], [18.3, 3440.0], [18.4, 3440.0], [18.5, 3440.0], [18.6, 3440.0], [18.7, 3440.0], [18.8, 3440.0], [18.9, 3440.0], [19.0, 3440.0], [19.1, 3440.0], [19.2, 3440.0], [19.3, 3440.0], [19.4, 3440.0], [19.5, 3440.0], [19.6, 3440.0], [19.7, 3440.0], [19.8, 3440.0], [19.9, 3440.0], [20.0, 3451.0], [20.1, 3451.0], [20.2, 3451.0], [20.3, 3451.0], [20.4, 3451.0], [20.5, 3451.0], [20.6, 3451.0], [20.7, 3451.0], [20.8, 3451.0], [20.9, 3451.0], [21.0, 3451.0], [21.1, 3451.0], [21.2, 3451.0], [21.3, 3451.0], [21.4, 3451.0], [21.5, 3451.0], [21.6, 3451.0], [21.7, 3451.0], [21.8, 3451.0], [21.9, 3451.0], [22.0, 3495.0], [22.1, 3495.0], [22.2, 3495.0], [22.3, 3495.0], [22.4, 3495.0], [22.5, 3495.0], [22.6, 3495.0], [22.7, 3495.0], [22.8, 3495.0], [22.9, 3495.0], [23.0, 3495.0], [23.1, 3495.0], [23.2, 3495.0], [23.3, 3495.0], [23.4, 3495.0], [23.5, 3495.0], [23.6, 3495.0], [23.7, 3495.0], [23.8, 3495.0], [23.9, 3495.0], [24.0, 3499.0], [24.1, 3499.0], [24.2, 3499.0], [24.3, 3499.0], [24.4, 3499.0], [24.5, 3499.0], [24.6, 3499.0], [24.7, 3499.0], [24.8, 3499.0], [24.9, 3499.0], [25.0, 3499.0], [25.1, 3499.0], [25.2, 3499.0], [25.3, 3499.0], [25.4, 3499.0], [25.5, 3499.0], [25.6, 3499.0], [25.7, 3499.0], [25.8, 3499.0], [25.9, 3499.0], [26.0, 3499.0], [26.1, 3499.0], [26.2, 3499.0], [26.3, 3499.0], [26.4, 3499.0], [26.5, 3499.0], [26.6, 3499.0], [26.7, 3499.0], [26.8, 3499.0], [26.9, 3499.0], [27.0, 3499.0], [27.1, 3499.0], [27.2, 3499.0], [27.3, 3499.0], [27.4, 3499.0], [27.5, 3499.0], [27.6, 3499.0], [27.7, 3499.0], [27.8, 3499.0], [27.9, 3499.0], [28.0, 3501.0], [28.1, 3501.0], [28.2, 3501.0], [28.3, 3501.0], [28.4, 3501.0], [28.5, 3501.0], [28.6, 3501.0], [28.7, 3501.0], [28.8, 3501.0], [28.9, 3501.0], [29.0, 3501.0], [29.1, 3501.0], [29.2, 3501.0], [29.3, 3501.0], [29.4, 3501.0], [29.5, 3501.0], [29.6, 3501.0], [29.7, 3501.0], [29.8, 3501.0], [29.9, 3501.0], [30.0, 3508.0], [30.1, 3508.0], [30.2, 3508.0], [30.3, 3508.0], [30.4, 3508.0], [30.5, 3508.0], [30.6, 3508.0], [30.7, 3508.0], [30.8, 3508.0], [30.9, 3508.0], [31.0, 3508.0], [31.1, 3508.0], [31.2, 3508.0], [31.3, 3508.0], [31.4, 3508.0], [31.5, 3508.0], [31.6, 3508.0], [31.7, 3508.0], [31.8, 3508.0], [31.9, 3508.0], [32.0, 3514.0], [32.1, 3514.0], [32.2, 3514.0], [32.3, 3514.0], [32.4, 3514.0], [32.5, 3514.0], [32.6, 3514.0], [32.7, 3514.0], [32.8, 3514.0], [32.9, 3514.0], [33.0, 3514.0], [33.1, 3514.0], [33.2, 3514.0], [33.3, 3514.0], [33.4, 3514.0], [33.5, 3514.0], [33.6, 3514.0], [33.7, 3514.0], [33.8, 3514.0], [33.9, 3514.0], [34.0, 3539.0], [34.1, 3539.0], [34.2, 3539.0], [34.3, 3539.0], [34.4, 3539.0], [34.5, 3539.0], [34.6, 3539.0], [34.7, 3539.0], [34.8, 3539.0], [34.9, 3539.0], [35.0, 3539.0], [35.1, 3539.0], [35.2, 3539.0], [35.3, 3539.0], [35.4, 3539.0], [35.5, 3539.0], [35.6, 3539.0], [35.7, 3539.0], [35.8, 3539.0], [35.9, 3539.0], [36.0, 3549.0], [36.1, 3549.0], [36.2, 3549.0], [36.3, 3549.0], [36.4, 3549.0], [36.5, 3549.0], [36.6, 3549.0], [36.7, 3549.0], [36.8, 3549.0], [36.9, 3549.0], [37.0, 3549.0], [37.1, 3549.0], [37.2, 3549.0], [37.3, 3549.0], [37.4, 3549.0], [37.5, 3549.0], [37.6, 3549.0], [37.7, 3549.0], [37.8, 3549.0], [37.9, 3549.0], [38.0, 3609.0], [38.1, 3609.0], [38.2, 3609.0], [38.3, 3609.0], [38.4, 3609.0], [38.5, 3609.0], [38.6, 3609.0], [38.7, 3609.0], [38.8, 3609.0], [38.9, 3609.0], [39.0, 3609.0], [39.1, 3609.0], [39.2, 3609.0], [39.3, 3609.0], [39.4, 3609.0], [39.5, 3609.0], [39.6, 3609.0], [39.7, 3609.0], [39.8, 3609.0], [39.9, 3609.0], [40.0, 3649.0], [40.1, 3649.0], [40.2, 3649.0], [40.3, 3649.0], [40.4, 3649.0], [40.5, 3649.0], [40.6, 3649.0], [40.7, 3649.0], [40.8, 3649.0], [40.9, 3649.0], [41.0, 3649.0], [41.1, 3649.0], [41.2, 3649.0], [41.3, 3649.0], [41.4, 3649.0], [41.5, 3649.0], [41.6, 3649.0], [41.7, 3649.0], [41.8, 3649.0], [41.9, 3649.0], [42.0, 3714.0], [42.1, 3714.0], [42.2, 3714.0], [42.3, 3714.0], [42.4, 3714.0], [42.5, 3714.0], [42.6, 3714.0], [42.7, 3714.0], [42.8, 3714.0], [42.9, 3714.0], [43.0, 3714.0], [43.1, 3714.0], [43.2, 3714.0], [43.3, 3714.0], [43.4, 3714.0], [43.5, 3714.0], [43.6, 3714.0], [43.7, 3714.0], [43.8, 3714.0], [43.9, 3714.0], [44.0, 3817.0], [44.1, 3817.0], [44.2, 3817.0], [44.3, 3817.0], [44.4, 3817.0], [44.5, 3817.0], [44.6, 3817.0], [44.7, 3817.0], [44.8, 3817.0], [44.9, 3817.0], [45.0, 3817.0], [45.1, 3817.0], [45.2, 3817.0], [45.3, 3817.0], [45.4, 3817.0], [45.5, 3817.0], [45.6, 3817.0], [45.7, 3817.0], [45.8, 3817.0], [45.9, 3817.0], [46.0, 3818.0], [46.1, 3818.0], [46.2, 3818.0], [46.3, 3818.0], [46.4, 3818.0], [46.5, 3818.0], [46.6, 3818.0], [46.7, 3818.0], [46.8, 3818.0], [46.9, 3818.0], [47.0, 3818.0], [47.1, 3818.0], [47.2, 3818.0], [47.3, 3818.0], [47.4, 3818.0], [47.5, 3818.0], [47.6, 3818.0], [47.7, 3818.0], [47.8, 3818.0], [47.9, 3818.0], [48.0, 3862.0], [48.1, 3862.0], [48.2, 3862.0], [48.3, 3862.0], [48.4, 3862.0], [48.5, 3862.0], [48.6, 3862.0], [48.7, 3862.0], [48.8, 3862.0], [48.9, 3862.0], [49.0, 3862.0], [49.1, 3862.0], [49.2, 3862.0], [49.3, 3862.0], [49.4, 3862.0], [49.5, 3862.0], [49.6, 3862.0], [49.7, 3862.0], [49.8, 3862.0], [49.9, 3862.0], [50.0, 3880.0], [50.1, 3880.0], [50.2, 3880.0], [50.3, 3880.0], [50.4, 3880.0], [50.5, 3880.0], [50.6, 3880.0], [50.7, 3880.0], [50.8, 3880.0], [50.9, 3880.0], [51.0, 3880.0], [51.1, 3880.0], [51.2, 3880.0], [51.3, 3880.0], [51.4, 3880.0], [51.5, 3880.0], [51.6, 3880.0], [51.7, 3880.0], [51.8, 3880.0], [51.9, 3880.0], [52.0, 3898.0], [52.1, 3898.0], [52.2, 3898.0], [52.3, 3898.0], [52.4, 3898.0], [52.5, 3898.0], [52.6, 3898.0], [52.7, 3898.0], [52.8, 3898.0], [52.9, 3898.0], [53.0, 3898.0], [53.1, 3898.0], [53.2, 3898.0], [53.3, 3898.0], [53.4, 3898.0], [53.5, 3898.0], [53.6, 3898.0], [53.7, 3898.0], [53.8, 3898.0], [53.9, 3898.0], [54.0, 3916.0], [54.1, 3916.0], [54.2, 3916.0], [54.3, 3916.0], [54.4, 3916.0], [54.5, 3916.0], [54.6, 3916.0], [54.7, 3916.0], [54.8, 3916.0], [54.9, 3916.0], [55.0, 3916.0], [55.1, 3916.0], [55.2, 3916.0], [55.3, 3916.0], [55.4, 3916.0], [55.5, 3916.0], [55.6, 3916.0], [55.7, 3916.0], [55.8, 3916.0], [55.9, 3916.0], [56.0, 3965.0], [56.1, 3965.0], [56.2, 3965.0], [56.3, 3965.0], [56.4, 3965.0], [56.5, 3965.0], [56.6, 3965.0], [56.7, 3965.0], [56.8, 3965.0], [56.9, 3965.0], [57.0, 3965.0], [57.1, 3965.0], [57.2, 3965.0], [57.3, 3965.0], [57.4, 3965.0], [57.5, 3965.0], [57.6, 3965.0], [57.7, 3965.0], [57.8, 3965.0], [57.9, 3965.0], [58.0, 4100.0], [58.1, 4100.0], [58.2, 4100.0], [58.3, 4100.0], [58.4, 4100.0], [58.5, 4100.0], [58.6, 4100.0], [58.7, 4100.0], [58.8, 4100.0], [58.9, 4100.0], [59.0, 4100.0], [59.1, 4100.0], [59.2, 4100.0], [59.3, 4100.0], [59.4, 4100.0], [59.5, 4100.0], [59.6, 4100.0], [59.7, 4100.0], [59.8, 4100.0], [59.9, 4100.0], [60.0, 4112.0], [60.1, 4112.0], [60.2, 4112.0], [60.3, 4112.0], [60.4, 4112.0], [60.5, 4112.0], [60.6, 4112.0], [60.7, 4112.0], [60.8, 4112.0], [60.9, 4112.0], [61.0, 4112.0], [61.1, 4112.0], [61.2, 4112.0], [61.3, 4112.0], [61.4, 4112.0], [61.5, 4112.0], [61.6, 4112.0], [61.7, 4112.0], [61.8, 4112.0], [61.9, 4112.0], [62.0, 4256.0], [62.1, 4256.0], [62.2, 4256.0], [62.3, 4256.0], [62.4, 4256.0], [62.5, 4256.0], [62.6, 4256.0], [62.7, 4256.0], [62.8, 4256.0], [62.9, 4256.0], [63.0, 4256.0], [63.1, 4256.0], [63.2, 4256.0], [63.3, 4256.0], [63.4, 4256.0], [63.5, 4256.0], [63.6, 4256.0], [63.7, 4256.0], [63.8, 4256.0], [63.9, 4256.0], [64.0, 4270.0], [64.1, 4270.0], [64.2, 4270.0], [64.3, 4270.0], [64.4, 4270.0], [64.5, 4270.0], [64.6, 4270.0], [64.7, 4270.0], [64.8, 4270.0], [64.9, 4270.0], [65.0, 4270.0], [65.1, 4270.0], [65.2, 4270.0], [65.3, 4270.0], [65.4, 4270.0], [65.5, 4270.0], [65.6, 4270.0], [65.7, 4270.0], [65.8, 4270.0], [65.9, 4270.0], [66.0, 4361.0], [66.1, 4361.0], [66.2, 4361.0], [66.3, 4361.0], [66.4, 4361.0], [66.5, 4361.0], [66.6, 4361.0], [66.7, 4361.0], [66.8, 4361.0], [66.9, 4361.0], [67.0, 4361.0], [67.1, 4361.0], [67.2, 4361.0], [67.3, 4361.0], [67.4, 4361.0], [67.5, 4361.0], [67.6, 4361.0], [67.7, 4361.0], [67.8, 4361.0], [67.9, 4361.0], [68.0, 4454.0], [68.1, 4454.0], [68.2, 4454.0], [68.3, 4454.0], [68.4, 4454.0], [68.5, 4454.0], [68.6, 4454.0], [68.7, 4454.0], [68.8, 4454.0], [68.9, 4454.0], [69.0, 4454.0], [69.1, 4454.0], [69.2, 4454.0], [69.3, 4454.0], [69.4, 4454.0], [69.5, 4454.0], [69.6, 4454.0], [69.7, 4454.0], [69.8, 4454.0], [69.9, 4454.0], [70.0, 4467.0], [70.1, 4467.0], [70.2, 4467.0], [70.3, 4467.0], [70.4, 4467.0], [70.5, 4467.0], [70.6, 4467.0], [70.7, 4467.0], [70.8, 4467.0], [70.9, 4467.0], [71.0, 4467.0], [71.1, 4467.0], [71.2, 4467.0], [71.3, 4467.0], [71.4, 4467.0], [71.5, 4467.0], [71.6, 4467.0], [71.7, 4467.0], [71.8, 4467.0], [71.9, 4467.0], [72.0, 4513.0], [72.1, 4513.0], [72.2, 4513.0], [72.3, 4513.0], [72.4, 4513.0], [72.5, 4513.0], [72.6, 4513.0], [72.7, 4513.0], [72.8, 4513.0], [72.9, 4513.0], [73.0, 4513.0], [73.1, 4513.0], [73.2, 4513.0], [73.3, 4513.0], [73.4, 4513.0], [73.5, 4513.0], [73.6, 4513.0], [73.7, 4513.0], [73.8, 4513.0], [73.9, 4513.0], [74.0, 4603.0], [74.1, 4603.0], [74.2, 4603.0], [74.3, 4603.0], [74.4, 4603.0], [74.5, 4603.0], [74.6, 4603.0], [74.7, 4603.0], [74.8, 4603.0], [74.9, 4603.0], [75.0, 4603.0], [75.1, 4603.0], [75.2, 4603.0], [75.3, 4603.0], [75.4, 4603.0], [75.5, 4603.0], [75.6, 4603.0], [75.7, 4603.0], [75.8, 4603.0], [75.9, 4603.0], [76.0, 4634.0], [76.1, 4634.0], [76.2, 4634.0], [76.3, 4634.0], [76.4, 4634.0], [76.5, 4634.0], [76.6, 4634.0], [76.7, 4634.0], [76.8, 4634.0], [76.9, 4634.0], [77.0, 4634.0], [77.1, 4634.0], [77.2, 4634.0], [77.3, 4634.0], [77.4, 4634.0], [77.5, 4634.0], [77.6, 4634.0], [77.7, 4634.0], [77.8, 4634.0], [77.9, 4634.0], [78.0, 4681.0], [78.1, 4681.0], [78.2, 4681.0], [78.3, 4681.0], [78.4, 4681.0], [78.5, 4681.0], [78.6, 4681.0], [78.7, 4681.0], [78.8, 4681.0], [78.9, 4681.0], [79.0, 4681.0], [79.1, 4681.0], [79.2, 4681.0], [79.3, 4681.0], [79.4, 4681.0], [79.5, 4681.0], [79.6, 4681.0], [79.7, 4681.0], [79.8, 4681.0], [79.9, 4681.0], [80.0, 4767.0], [80.1, 4767.0], [80.2, 4767.0], [80.3, 4767.0], [80.4, 4767.0], [80.5, 4767.0], [80.6, 4767.0], [80.7, 4767.0], [80.8, 4767.0], [80.9, 4767.0], [81.0, 4767.0], [81.1, 4767.0], [81.2, 4767.0], [81.3, 4767.0], [81.4, 4767.0], [81.5, 4767.0], [81.6, 4767.0], [81.7, 4767.0], [81.8, 4767.0], [81.9, 4767.0], [82.0, 4955.0], [82.1, 4955.0], [82.2, 4955.0], [82.3, 4955.0], [82.4, 4955.0], [82.5, 4955.0], [82.6, 4955.0], [82.7, 4955.0], [82.8, 4955.0], [82.9, 4955.0], [83.0, 4955.0], [83.1, 4955.0], [83.2, 4955.0], [83.3, 4955.0], [83.4, 4955.0], [83.5, 4955.0], [83.6, 4955.0], [83.7, 4955.0], [83.8, 4955.0], [83.9, 4955.0], [84.0, 6616.0], [84.1, 6616.0], [84.2, 6616.0], [84.3, 6616.0], [84.4, 6616.0], [84.5, 6616.0], [84.6, 6616.0], [84.7, 6616.0], [84.8, 6616.0], [84.9, 6616.0], [85.0, 6616.0], [85.1, 6616.0], [85.2, 6616.0], [85.3, 6616.0], [85.4, 6616.0], [85.5, 6616.0], [85.6, 6616.0], [85.7, 6616.0], [85.8, 6616.0], [85.9, 6616.0], [86.0, 6845.0], [86.1, 6845.0], [86.2, 6845.0], [86.3, 6845.0], [86.4, 6845.0], [86.5, 6845.0], [86.6, 6845.0], [86.7, 6845.0], [86.8, 6845.0], [86.9, 6845.0], [87.0, 6845.0], [87.1, 6845.0], [87.2, 6845.0], [87.3, 6845.0], [87.4, 6845.0], [87.5, 6845.0], [87.6, 6845.0], [87.7, 6845.0], [87.8, 6845.0], [87.9, 6845.0], [88.0, 6848.0], [88.1, 6848.0], [88.2, 6848.0], [88.3, 6848.0], [88.4, 6848.0], [88.5, 6848.0], [88.6, 6848.0], [88.7, 6848.0], [88.8, 6848.0], [88.9, 6848.0], [89.0, 6848.0], [89.1, 6848.0], [89.2, 6848.0], [89.3, 6848.0], [89.4, 6848.0], [89.5, 6848.0], [89.6, 6848.0], [89.7, 6848.0], [89.8, 6848.0], [89.9, 6848.0], [90.0, 7042.0], [90.1, 7042.0], [90.2, 7042.0], [90.3, 7042.0], [90.4, 7042.0], [90.5, 7042.0], [90.6, 7042.0], [90.7, 7042.0], [90.8, 7042.0], [90.9, 7042.0], [91.0, 7042.0], [91.1, 7042.0], [91.2, 7042.0], [91.3, 7042.0], [91.4, 7042.0], [91.5, 7042.0], [91.6, 7042.0], [91.7, 7042.0], [91.8, 7042.0], [91.9, 7042.0], [92.0, 8379.0], [92.1, 8379.0], [92.2, 8379.0], [92.3, 8379.0], [92.4, 8379.0], [92.5, 8379.0], [92.6, 8379.0], [92.7, 8379.0], [92.8, 8379.0], [92.9, 8379.0], [93.0, 8379.0], [93.1, 8379.0], [93.2, 8379.0], [93.3, 8379.0], [93.4, 8379.0], [93.5, 8379.0], [93.6, 8379.0], [93.7, 8379.0], [93.8, 8379.0], [93.9, 8379.0], [94.0, 9793.0], [94.1, 9793.0], [94.2, 9793.0], [94.3, 9793.0], [94.4, 9793.0], [94.5, 9793.0], [94.6, 9793.0], [94.7, 9793.0], [94.8, 9793.0], [94.9, 9793.0], [95.0, 9793.0], [95.1, 9793.0], [95.2, 9793.0], [95.3, 9793.0], [95.4, 9793.0], [95.5, 9793.0], [95.6, 9793.0], [95.7, 9793.0], [95.8, 9793.0], [95.9, 9793.0], [96.0, 9842.0], [96.1, 9842.0], [96.2, 9842.0], [96.3, 9842.0], [96.4, 9842.0], [96.5, 9842.0], [96.6, 9842.0], [96.7, 9842.0], [96.8, 9842.0], [96.9, 9842.0], [97.0, 9842.0], [97.1, 9842.0], [97.2, 9842.0], [97.3, 9842.0], [97.4, 9842.0], [97.5, 9842.0], [97.6, 9842.0], [97.7, 9842.0], [97.8, 9842.0], [97.9, 9842.0], [98.0, 11279.0], [98.1, 11279.0], [98.2, 11279.0], [98.3, 11279.0], [98.4, 11279.0], [98.5, 11279.0], [98.6, 11279.0], [98.7, 11279.0], [98.8, 11279.0], [98.9, 11279.0], [99.0, 11279.0], [99.1, 11279.0], [99.2, 11279.0], [99.3, 11279.0], [99.4, 11279.0], [99.5, 11279.0], [99.6, 11279.0], [99.7, 11279.0], [99.8, 11279.0], [99.9, 11279.0]], "isOverall": false, "label": "Bot Service: Conversation Update", "isController": false}, {"data": [[0.0, 1052.0], [0.1, 1052.0], [0.2, 1052.0], [0.3, 1052.0], [0.4, 1052.0], [0.5, 1052.0], [0.6, 1052.0], [0.7, 1052.0], [0.8, 1052.0], [0.9, 1052.0], [1.0, 1052.0], [1.1, 1052.0], [1.2, 1052.0], [1.3, 1052.0], [1.4, 1052.0], [1.5, 1052.0], [1.6, 1052.0], [1.7, 1052.0], [1.8, 1052.0], [1.9, 1052.0], [2.0, 1322.0], [2.1, 1322.0], [2.2, 1322.0], [2.3, 1322.0], [2.4, 1322.0], [2.5, 1322.0], [2.6, 1322.0], [2.7, 1322.0], [2.8, 1322.0], [2.9, 1322.0], [3.0, 1322.0], [3.1, 1322.0], [3.2, 1322.0], [3.3, 1322.0], [3.4, 1322.0], [3.5, 1322.0], [3.6, 1322.0], [3.7, 1322.0], [3.8, 1322.0], [3.9, 1322.0], [4.0, 1329.0], [4.1, 1329.0], [4.2, 1329.0], [4.3, 1329.0], [4.4, 1329.0], [4.5, 1329.0], [4.6, 1329.0], [4.7, 1329.0], [4.8, 1329.0], [4.9, 1329.0], [5.0, 1329.0], [5.1, 1329.0], [5.2, 1329.0], [5.3, 1329.0], [5.4, 1329.0], [5.5, 1329.0], [5.6, 1329.0], [5.7, 1329.0], [5.8, 1329.0], [5.9, 1329.0], [6.0, 1409.0], [6.1, 1409.0], [6.2, 1409.0], [6.3, 1409.0], [6.4, 1409.0], [6.5, 1409.0], [6.6, 1409.0], [6.7, 1409.0], [6.8, 1409.0], [6.9, 1409.0], [7.0, 1409.0], [7.1, 1409.0], [7.2, 1409.0], [7.3, 1409.0], [7.4, 1409.0], [7.5, 1409.0], [7.6, 1409.0], [7.7, 1409.0], [7.8, 1409.0], [7.9, 1409.0], [8.0, 1686.0], [8.1, 1686.0], [8.2, 1686.0], [8.3, 1686.0], [8.4, 1686.0], [8.5, 1686.0], [8.6, 1686.0], [8.7, 1686.0], [8.8, 1686.0], [8.9, 1686.0], [9.0, 1686.0], [9.1, 1686.0], [9.2, 1686.0], [9.3, 1686.0], [9.4, 1686.0], [9.5, 1686.0], [9.6, 1686.0], [9.7, 1686.0], [9.8, 1686.0], [9.9, 1686.0], [10.0, 1835.0], [10.1, 1835.0], [10.2, 1835.0], [10.3, 1835.0], [10.4, 1835.0], [10.5, 1835.0], [10.6, 1835.0], [10.7, 1835.0], [10.8, 1835.0], [10.9, 1835.0], [11.0, 1835.0], [11.1, 1835.0], [11.2, 1835.0], [11.3, 1835.0], [11.4, 1835.0], [11.5, 1835.0], [11.6, 1835.0], [11.7, 1835.0], [11.8, 1835.0], [11.9, 1835.0], [12.0, 2059.0], [12.1, 2059.0], [12.2, 2059.0], [12.3, 2059.0], [12.4, 2059.0], [12.5, 2059.0], [12.6, 2059.0], [12.7, 2059.0], [12.8, 2059.0], [12.9, 2059.0], [13.0, 2059.0], [13.1, 2059.0], [13.2, 2059.0], [13.3, 2059.0], [13.4, 2059.0], [13.5, 2059.0], [13.6, 2059.0], [13.7, 2059.0], [13.8, 2059.0], [13.9, 2059.0], [14.0, 2109.0], [14.1, 2109.0], [14.2, 2109.0], [14.3, 2109.0], [14.4, 2109.0], [14.5, 2109.0], [14.6, 2109.0], [14.7, 2109.0], [14.8, 2109.0], [14.9, 2109.0], [15.0, 2109.0], [15.1, 2109.0], [15.2, 2109.0], [15.3, 2109.0], [15.4, 2109.0], [15.5, 2109.0], [15.6, 2109.0], [15.7, 2109.0], [15.8, 2109.0], [15.9, 2109.0], [16.0, 2230.0], [16.1, 2230.0], [16.2, 2230.0], [16.3, 2230.0], [16.4, 2230.0], [16.5, 2230.0], [16.6, 2230.0], [16.7, 2230.0], [16.8, 2230.0], [16.9, 2230.0], [17.0, 2230.0], [17.1, 2230.0], [17.2, 2230.0], [17.3, 2230.0], [17.4, 2230.0], [17.5, 2230.0], [17.6, 2230.0], [17.7, 2230.0], [17.8, 2230.0], [17.9, 2230.0], [18.0, 2418.0], [18.1, 2418.0], [18.2, 2418.0], [18.3, 2418.0], [18.4, 2418.0], [18.5, 2418.0], [18.6, 2418.0], [18.7, 2418.0], [18.8, 2418.0], [18.9, 2418.0], [19.0, 2418.0], [19.1, 2418.0], [19.2, 2418.0], [19.3, 2418.0], [19.4, 2418.0], [19.5, 2418.0], [19.6, 2418.0], [19.7, 2418.0], [19.8, 2418.0], [19.9, 2418.0], [20.0, 2606.0], [20.1, 2606.0], [20.2, 2606.0], [20.3, 2606.0], [20.4, 2606.0], [20.5, 2606.0], [20.6, 2606.0], [20.7, 2606.0], [20.8, 2606.0], [20.9, 2606.0], [21.0, 2606.0], [21.1, 2606.0], [21.2, 2606.0], [21.3, 2606.0], [21.4, 2606.0], [21.5, 2606.0], [21.6, 2606.0], [21.7, 2606.0], [21.8, 2606.0], [21.9, 2606.0], [22.0, 2818.0], [22.1, 2818.0], [22.2, 2818.0], [22.3, 2818.0], [22.4, 2818.0], [22.5, 2818.0], [22.6, 2818.0], [22.7, 2818.0], [22.8, 2818.0], [22.9, 2818.0], [23.0, 2818.0], [23.1, 2818.0], [23.2, 2818.0], [23.3, 2818.0], [23.4, 2818.0], [23.5, 2818.0], [23.6, 2818.0], [23.7, 2818.0], [23.8, 2818.0], [23.9, 2818.0], [24.0, 2821.0], [24.1, 2821.0], [24.2, 2821.0], [24.3, 2821.0], [24.4, 2821.0], [24.5, 2821.0], [24.6, 2821.0], [24.7, 2821.0], [24.8, 2821.0], [24.9, 2821.0], [25.0, 2821.0], [25.1, 2821.0], [25.2, 2821.0], [25.3, 2821.0], [25.4, 2821.0], [25.5, 2821.0], [25.6, 2821.0], [25.7, 2821.0], [25.8, 2821.0], [25.9, 2821.0], [26.0, 2997.0], [26.1, 2997.0], [26.2, 2997.0], [26.3, 2997.0], [26.4, 2997.0], [26.5, 2997.0], [26.6, 2997.0], [26.7, 2997.0], [26.8, 2997.0], [26.9, 2997.0], [27.0, 2997.0], [27.1, 2997.0], [27.2, 2997.0], [27.3, 2997.0], [27.4, 2997.0], [27.5, 2997.0], [27.6, 2997.0], [27.7, 2997.0], [27.8, 2997.0], [27.9, 2997.0], [28.0, 3223.0], [28.1, 3223.0], [28.2, 3223.0], [28.3, 3223.0], [28.4, 3223.0], [28.5, 3223.0], [28.6, 3223.0], [28.7, 3223.0], [28.8, 3223.0], [28.9, 3223.0], [29.0, 3223.0], [29.1, 3223.0], [29.2, 3223.0], [29.3, 3223.0], [29.4, 3223.0], [29.5, 3223.0], [29.6, 3223.0], [29.7, 3223.0], [29.8, 3223.0], [29.9, 3223.0], [30.0, 3339.0], [30.1, 3339.0], [30.2, 3339.0], [30.3, 3339.0], [30.4, 3339.0], [30.5, 3339.0], [30.6, 3339.0], [30.7, 3339.0], [30.8, 3339.0], [30.9, 3339.0], [31.0, 3339.0], [31.1, 3339.0], [31.2, 3339.0], [31.3, 3339.0], [31.4, 3339.0], [31.5, 3339.0], [31.6, 3339.0], [31.7, 3339.0], [31.8, 3339.0], [31.9, 3339.0], [32.0, 3592.0], [32.1, 3592.0], [32.2, 3592.0], [32.3, 3592.0], [32.4, 3592.0], [32.5, 3592.0], [32.6, 3592.0], [32.7, 3592.0], [32.8, 3592.0], [32.9, 3592.0], [33.0, 3592.0], [33.1, 3592.0], [33.2, 3592.0], [33.3, 3592.0], [33.4, 3592.0], [33.5, 3592.0], [33.6, 3592.0], [33.7, 3592.0], [33.8, 3592.0], [33.9, 3592.0], [34.0, 3636.0], [34.1, 3636.0], [34.2, 3636.0], [34.3, 3636.0], [34.4, 3636.0], [34.5, 3636.0], [34.6, 3636.0], [34.7, 3636.0], [34.8, 3636.0], [34.9, 3636.0], [35.0, 3636.0], [35.1, 3636.0], [35.2, 3636.0], [35.3, 3636.0], [35.4, 3636.0], [35.5, 3636.0], [35.6, 3636.0], [35.7, 3636.0], [35.8, 3636.0], [35.9, 3636.0], [36.0, 3862.0], [36.1, 3862.0], [36.2, 3862.0], [36.3, 3862.0], [36.4, 3862.0], [36.5, 3862.0], [36.6, 3862.0], [36.7, 3862.0], [36.8, 3862.0], [36.9, 3862.0], [37.0, 3862.0], [37.1, 3862.0], [37.2, 3862.0], [37.3, 3862.0], [37.4, 3862.0], [37.5, 3862.0], [37.6, 3862.0], [37.7, 3862.0], [37.8, 3862.0], [37.9, 3862.0], [38.0, 3972.0], [38.1, 3972.0], [38.2, 3972.0], [38.3, 3972.0], [38.4, 3972.0], [38.5, 3972.0], [38.6, 3972.0], [38.7, 3972.0], [38.8, 3972.0], [38.9, 3972.0], [39.0, 3972.0], [39.1, 3972.0], [39.2, 3972.0], [39.3, 3972.0], [39.4, 3972.0], [39.5, 3972.0], [39.6, 3972.0], [39.7, 3972.0], [39.8, 3972.0], [39.9, 3972.0], [40.0, 4258.0], [40.1, 4258.0], [40.2, 4258.0], [40.3, 4258.0], [40.4, 4258.0], [40.5, 4258.0], [40.6, 4258.0], [40.7, 4258.0], [40.8, 4258.0], [40.9, 4258.0], [41.0, 4258.0], [41.1, 4258.0], [41.2, 4258.0], [41.3, 4258.0], [41.4, 4258.0], [41.5, 4258.0], [41.6, 4258.0], [41.7, 4258.0], [41.8, 4258.0], [41.9, 4258.0], [42.0, 4590.0], [42.1, 4590.0], [42.2, 4590.0], [42.3, 4590.0], [42.4, 4590.0], [42.5, 4590.0], [42.6, 4590.0], [42.7, 4590.0], [42.8, 4590.0], [42.9, 4590.0], [43.0, 4590.0], [43.1, 4590.0], [43.2, 4590.0], [43.3, 4590.0], [43.4, 4590.0], [43.5, 4590.0], [43.6, 4590.0], [43.7, 4590.0], [43.8, 4590.0], [43.9, 4590.0], [44.0, 4815.0], [44.1, 4815.0], [44.2, 4815.0], [44.3, 4815.0], [44.4, 4815.0], [44.5, 4815.0], [44.6, 4815.0], [44.7, 4815.0], [44.8, 4815.0], [44.9, 4815.0], [45.0, 4815.0], [45.1, 4815.0], [45.2, 4815.0], [45.3, 4815.0], [45.4, 4815.0], [45.5, 4815.0], [45.6, 4815.0], [45.7, 4815.0], [45.8, 4815.0], [45.9, 4815.0], [46.0, 4887.0], [46.1, 4887.0], [46.2, 4887.0], [46.3, 4887.0], [46.4, 4887.0], [46.5, 4887.0], [46.6, 4887.0], [46.7, 4887.0], [46.8, 4887.0], [46.9, 4887.0], [47.0, 4887.0], [47.1, 4887.0], [47.2, 4887.0], [47.3, 4887.0], [47.4, 4887.0], [47.5, 4887.0], [47.6, 4887.0], [47.7, 4887.0], [47.8, 4887.0], [47.9, 4887.0], [48.0, 4893.0], [48.1, 4893.0], [48.2, 4893.0], [48.3, 4893.0], [48.4, 4893.0], [48.5, 4893.0], [48.6, 4893.0], [48.7, 4893.0], [48.8, 4893.0], [48.9, 4893.0], [49.0, 4893.0], [49.1, 4893.0], [49.2, 4893.0], [49.3, 4893.0], [49.4, 4893.0], [49.5, 4893.0], [49.6, 4893.0], [49.7, 4893.0], [49.8, 4893.0], [49.9, 4893.0], [50.0, 5088.0], [50.1, 5088.0], [50.2, 5088.0], [50.3, 5088.0], [50.4, 5088.0], [50.5, 5088.0], [50.6, 5088.0], [50.7, 5088.0], [50.8, 5088.0], [50.9, 5088.0], [51.0, 5088.0], [51.1, 5088.0], [51.2, 5088.0], [51.3, 5088.0], [51.4, 5088.0], [51.5, 5088.0], [51.6, 5088.0], [51.7, 5088.0], [51.8, 5088.0], [51.9, 5088.0], [52.0, 5254.0], [52.1, 5254.0], [52.2, 5254.0], [52.3, 5254.0], [52.4, 5254.0], [52.5, 5254.0], [52.6, 5254.0], [52.7, 5254.0], [52.8, 5254.0], [52.9, 5254.0], [53.0, 5254.0], [53.1, 5254.0], [53.2, 5254.0], [53.3, 5254.0], [53.4, 5254.0], [53.5, 5254.0], [53.6, 5254.0], [53.7, 5254.0], [53.8, 5254.0], [53.9, 5254.0], [54.0, 5282.0], [54.1, 5282.0], [54.2, 5282.0], [54.3, 5282.0], [54.4, 5282.0], [54.5, 5282.0], [54.6, 5282.0], [54.7, 5282.0], [54.8, 5282.0], [54.9, 5282.0], [55.0, 5282.0], [55.1, 5282.0], [55.2, 5282.0], [55.3, 5282.0], [55.4, 5282.0], [55.5, 5282.0], [55.6, 5282.0], [55.7, 5282.0], [55.8, 5282.0], [55.9, 5282.0], [56.0, 5428.0], [56.1, 5428.0], [56.2, 5428.0], [56.3, 5428.0], [56.4, 5428.0], [56.5, 5428.0], [56.6, 5428.0], [56.7, 5428.0], [56.8, 5428.0], [56.9, 5428.0], [57.0, 5428.0], [57.1, 5428.0], [57.2, 5428.0], [57.3, 5428.0], [57.4, 5428.0], [57.5, 5428.0], [57.6, 5428.0], [57.7, 5428.0], [57.8, 5428.0], [57.9, 5428.0], [58.0, 5445.0], [58.1, 5445.0], [58.2, 5445.0], [58.3, 5445.0], [58.4, 5445.0], [58.5, 5445.0], [58.6, 5445.0], [58.7, 5445.0], [58.8, 5445.0], [58.9, 5445.0], [59.0, 5445.0], [59.1, 5445.0], [59.2, 5445.0], [59.3, 5445.0], [59.4, 5445.0], [59.5, 5445.0], [59.6, 5445.0], [59.7, 5445.0], [59.8, 5445.0], [59.9, 5445.0], [60.0, 5512.0], [60.1, 5512.0], [60.2, 5512.0], [60.3, 5512.0], [60.4, 5512.0], [60.5, 5512.0], [60.6, 5512.0], [60.7, 5512.0], [60.8, 5512.0], [60.9, 5512.0], [61.0, 5512.0], [61.1, 5512.0], [61.2, 5512.0], [61.3, 5512.0], [61.4, 5512.0], [61.5, 5512.0], [61.6, 5512.0], [61.7, 5512.0], [61.8, 5512.0], [61.9, 5512.0], [62.0, 5549.0], [62.1, 5549.0], [62.2, 5549.0], [62.3, 5549.0], [62.4, 5549.0], [62.5, 5549.0], [62.6, 5549.0], [62.7, 5549.0], [62.8, 5549.0], [62.9, 5549.0], [63.0, 5549.0], [63.1, 5549.0], [63.2, 5549.0], [63.3, 5549.0], [63.4, 5549.0], [63.5, 5549.0], [63.6, 5549.0], [63.7, 5549.0], [63.8, 5549.0], [63.9, 5549.0], [64.0, 5617.0], [64.1, 5617.0], [64.2, 5617.0], [64.3, 5617.0], [64.4, 5617.0], [64.5, 5617.0], [64.6, 5617.0], [64.7, 5617.0], [64.8, 5617.0], [64.9, 5617.0], [65.0, 5617.0], [65.1, 5617.0], [65.2, 5617.0], [65.3, 5617.0], [65.4, 5617.0], [65.5, 5617.0], [65.6, 5617.0], [65.7, 5617.0], [65.8, 5617.0], [65.9, 5617.0], [66.0, 5682.0], [66.1, 5682.0], [66.2, 5682.0], [66.3, 5682.0], [66.4, 5682.0], [66.5, 5682.0], [66.6, 5682.0], [66.7, 5682.0], [66.8, 5682.0], [66.9, 5682.0], [67.0, 5682.0], [67.1, 5682.0], [67.2, 5682.0], [67.3, 5682.0], [67.4, 5682.0], [67.5, 5682.0], [67.6, 5682.0], [67.7, 5682.0], [67.8, 5682.0], [67.9, 5682.0], [68.0, 5944.0], [68.1, 5944.0], [68.2, 5944.0], [68.3, 5944.0], [68.4, 5944.0], [68.5, 5944.0], [68.6, 5944.0], [68.7, 5944.0], [68.8, 5944.0], [68.9, 5944.0], [69.0, 5944.0], [69.1, 5944.0], [69.2, 5944.0], [69.3, 5944.0], [69.4, 5944.0], [69.5, 5944.0], [69.6, 5944.0], [69.7, 5944.0], [69.8, 5944.0], [69.9, 5944.0], [70.0, 5976.0], [70.1, 5976.0], [70.2, 5976.0], [70.3, 5976.0], [70.4, 5976.0], [70.5, 5976.0], [70.6, 5976.0], [70.7, 5976.0], [70.8, 5976.0], [70.9, 5976.0], [71.0, 5976.0], [71.1, 5976.0], [71.2, 5976.0], [71.3, 5976.0], [71.4, 5976.0], [71.5, 5976.0], [71.6, 5976.0], [71.7, 5976.0], [71.8, 5976.0], [71.9, 5976.0], [72.0, 6445.0], [72.1, 6445.0], [72.2, 6445.0], [72.3, 6445.0], [72.4, 6445.0], [72.5, 6445.0], [72.6, 6445.0], [72.7, 6445.0], [72.8, 6445.0], [72.9, 6445.0], [73.0, 6445.0], [73.1, 6445.0], [73.2, 6445.0], [73.3, 6445.0], [73.4, 6445.0], [73.5, 6445.0], [73.6, 6445.0], [73.7, 6445.0], [73.8, 6445.0], [73.9, 6445.0], [74.0, 6518.0], [74.1, 6518.0], [74.2, 6518.0], [74.3, 6518.0], [74.4, 6518.0], [74.5, 6518.0], [74.6, 6518.0], [74.7, 6518.0], [74.8, 6518.0], [74.9, 6518.0], [75.0, 6518.0], [75.1, 6518.0], [75.2, 6518.0], [75.3, 6518.0], [75.4, 6518.0], [75.5, 6518.0], [75.6, 6518.0], [75.7, 6518.0], [75.8, 6518.0], [75.9, 6518.0], [76.0, 6523.0], [76.1, 6523.0], [76.2, 6523.0], [76.3, 6523.0], [76.4, 6523.0], [76.5, 6523.0], [76.6, 6523.0], [76.7, 6523.0], [76.8, 6523.0], [76.9, 6523.0], [77.0, 6523.0], [77.1, 6523.0], [77.2, 6523.0], [77.3, 6523.0], [77.4, 6523.0], [77.5, 6523.0], [77.6, 6523.0], [77.7, 6523.0], [77.8, 6523.0], [77.9, 6523.0], [78.0, 6549.0], [78.1, 6549.0], [78.2, 6549.0], [78.3, 6549.0], [78.4, 6549.0], [78.5, 6549.0], [78.6, 6549.0], [78.7, 6549.0], [78.8, 6549.0], [78.9, 6549.0], [79.0, 6549.0], [79.1, 6549.0], [79.2, 6549.0], [79.3, 6549.0], [79.4, 6549.0], [79.5, 6549.0], [79.6, 6549.0], [79.7, 6549.0], [79.8, 6549.0], [79.9, 6549.0], [80.0, 6908.0], [80.1, 6908.0], [80.2, 6908.0], [80.3, 6908.0], [80.4, 6908.0], [80.5, 6908.0], [80.6, 6908.0], [80.7, 6908.0], [80.8, 6908.0], [80.9, 6908.0], [81.0, 6908.0], [81.1, 6908.0], [81.2, 6908.0], [81.3, 6908.0], [81.4, 6908.0], [81.5, 6908.0], [81.6, 6908.0], [81.7, 6908.0], [81.8, 6908.0], [81.9, 6908.0], [82.0, 7155.0], [82.1, 7155.0], [82.2, 7155.0], [82.3, 7155.0], [82.4, 7155.0], [82.5, 7155.0], [82.6, 7155.0], [82.7, 7155.0], [82.8, 7155.0], [82.9, 7155.0], [83.0, 7155.0], [83.1, 7155.0], [83.2, 7155.0], [83.3, 7155.0], [83.4, 7155.0], [83.5, 7155.0], [83.6, 7155.0], [83.7, 7155.0], [83.8, 7155.0], [83.9, 7155.0], [84.0, 8154.0], [84.1, 8154.0], [84.2, 8154.0], [84.3, 8154.0], [84.4, 8154.0], [84.5, 8154.0], [84.6, 8154.0], [84.7, 8154.0], [84.8, 8154.0], [84.9, 8154.0], [85.0, 8154.0], [85.1, 8154.0], [85.2, 8154.0], [85.3, 8154.0], [85.4, 8154.0], [85.5, 8154.0], [85.6, 8154.0], [85.7, 8154.0], [85.8, 8154.0], [85.9, 8154.0], [86.0, 8767.0], [86.1, 8767.0], [86.2, 8767.0], [86.3, 8767.0], [86.4, 8767.0], [86.5, 8767.0], [86.6, 8767.0], [86.7, 8767.0], [86.8, 8767.0], [86.9, 8767.0], [87.0, 8767.0], [87.1, 8767.0], [87.2, 8767.0], [87.3, 8767.0], [87.4, 8767.0], [87.5, 8767.0], [87.6, 8767.0], [87.7, 8767.0], [87.8, 8767.0], [87.9, 8767.0], [88.0, 9509.0], [88.1, 9509.0], [88.2, 9509.0], [88.3, 9509.0], [88.4, 9509.0], [88.5, 9509.0], [88.6, 9509.0], [88.7, 9509.0], [88.8, 9509.0], [88.9, 9509.0], [89.0, 9509.0], [89.1, 9509.0], [89.2, 9509.0], [89.3, 9509.0], [89.4, 9509.0], [89.5, 9509.0], [89.6, 9509.0], [89.7, 9509.0], [89.8, 9509.0], [89.9, 9509.0], [90.0, 9652.0], [90.1, 9652.0], [90.2, 9652.0], [90.3, 9652.0], [90.4, 9652.0], [90.5, 9652.0], [90.6, 9652.0], [90.7, 9652.0], [90.8, 9652.0], [90.9, 9652.0], [91.0, 9652.0], [91.1, 9652.0], [91.2, 9652.0], [91.3, 9652.0], [91.4, 9652.0], [91.5, 9652.0], [91.6, 9652.0], [91.7, 9652.0], [91.8, 9652.0], [91.9, 9652.0], [92.0, 10090.0], [92.1, 10090.0], [92.2, 10090.0], [92.3, 10090.0], [92.4, 10090.0], [92.5, 10090.0], [92.6, 10090.0], [92.7, 10090.0], [92.8, 10090.0], [92.9, 10090.0], [93.0, 10090.0], [93.1, 10090.0], [93.2, 10090.0], [93.3, 10090.0], [93.4, 10090.0], [93.5, 10090.0], [93.6, 10090.0], [93.7, 10090.0], [93.8, 10090.0], [93.9, 10090.0], [94.0, 11738.0], [94.1, 11738.0], [94.2, 11738.0], [94.3, 11738.0], [94.4, 11738.0], [94.5, 11738.0], [94.6, 11738.0], [94.7, 11738.0], [94.8, 11738.0], [94.9, 11738.0], [95.0, 11738.0], [95.1, 11738.0], [95.2, 11738.0], [95.3, 11738.0], [95.4, 11738.0], [95.5, 11738.0], [95.6, 11738.0], [95.7, 11738.0], [95.8, 11738.0], [95.9, 11738.0], [96.0, 13356.0], [96.1, 13356.0], [96.2, 13356.0], [96.3, 13356.0], [96.4, 13356.0], [96.5, 13356.0], [96.6, 13356.0], [96.7, 13356.0], [96.8, 13356.0], [96.9, 13356.0], [97.0, 13356.0], [97.1, 13356.0], [97.2, 13356.0], [97.3, 13356.0], [97.4, 13356.0], [97.5, 13356.0], [97.6, 13356.0], [97.7, 13356.0], [97.8, 13356.0], [97.9, 13356.0], [98.0, 19649.0], [98.1, 19649.0], [98.2, 19649.0], [98.3, 19649.0], [98.4, 19649.0], [98.5, 19649.0], [98.6, 19649.0], [98.7, 19649.0], [98.8, 19649.0], [98.9, 19649.0], [99.0, 19649.0], [99.1, 19649.0], [99.2, 19649.0], [99.3, 19649.0], [99.4, 19649.0], [99.5, 19649.0], [99.6, 19649.0], [99.7, 19649.0], [99.8, 19649.0], [99.9, 19649.0]], "isOverall": false, "label": "Bot Service: Message search Ongs Hat", "isController": false}, {"data": [[0.0, 25.0], [0.1, 25.0], [0.2, 25.0], [0.3, 25.0], [0.4, 25.0], [0.5, 25.0], [0.6, 25.0], [0.7, 25.0], [0.8, 25.0], [0.9, 25.0], [1.0, 25.0], [1.1, 25.0], [1.2, 25.0], [1.3, 25.0], [1.4, 25.0], [1.5, 25.0], [1.6, 25.0], [1.7, 25.0], [1.8, 25.0], [1.9, 25.0], [2.0, 40.0], [2.1, 40.0], [2.2, 40.0], [2.3, 40.0], [2.4, 40.0], [2.5, 40.0], [2.6, 40.0], [2.7, 40.0], [2.8, 40.0], [2.9, 40.0], [3.0, 40.0], [3.1, 40.0], [3.2, 40.0], [3.3, 40.0], [3.4, 40.0], [3.5, 40.0], [3.6, 40.0], [3.7, 40.0], [3.8, 40.0], [3.9, 40.0], [4.0, 43.0], [4.1, 43.0], [4.2, 43.0], [4.3, 43.0], [4.4, 43.0], [4.5, 43.0], [4.6, 43.0], [4.7, 43.0], [4.8, 43.0], [4.9, 43.0], [5.0, 43.0], [5.1, 43.0], [5.2, 43.0], [5.3, 43.0], [5.4, 43.0], [5.5, 43.0], [5.6, 43.0], [5.7, 43.0], [5.8, 43.0], [5.9, 43.0], [6.0, 44.0], [6.1, 44.0], [6.2, 44.0], [6.3, 44.0], [6.4, 44.0], [6.5, 44.0], [6.6, 44.0], [6.7, 44.0], [6.8, 44.0], [6.9, 44.0], [7.0, 44.0], [7.1, 44.0], [7.2, 44.0], [7.3, 44.0], [7.4, 44.0], [7.5, 44.0], [7.6, 44.0], [7.7, 44.0], [7.8, 44.0], [7.9, 44.0], [8.0, 45.0], [8.1, 45.0], [8.2, 45.0], [8.3, 45.0], [8.4, 45.0], [8.5, 45.0], [8.6, 45.0], [8.7, 45.0], [8.8, 45.0], [8.9, 45.0], [9.0, 45.0], [9.1, 45.0], [9.2, 45.0], [9.3, 45.0], [9.4, 45.0], [9.5, 45.0], [9.6, 45.0], [9.7, 45.0], [9.8, 45.0], [9.9, 45.0], [10.0, 54.0], [10.1, 54.0], [10.2, 54.0], [10.3, 54.0], [10.4, 54.0], [10.5, 54.0], [10.6, 54.0], [10.7, 54.0], [10.8, 54.0], [10.9, 54.0], [11.0, 54.0], [11.1, 54.0], [11.2, 54.0], [11.3, 54.0], [11.4, 54.0], [11.5, 54.0], [11.6, 54.0], [11.7, 54.0], [11.8, 54.0], [11.9, 54.0], [12.0, 101.0], [12.1, 101.0], [12.2, 101.0], [12.3, 101.0], [12.4, 101.0], [12.5, 101.0], [12.6, 101.0], [12.7, 101.0], [12.8, 101.0], [12.9, 101.0], [13.0, 101.0], [13.1, 101.0], [13.2, 101.0], [13.3, 101.0], [13.4, 101.0], [13.5, 101.0], [13.6, 101.0], [13.7, 101.0], [13.8, 101.0], [13.9, 101.0], [14.0, 106.0], [14.1, 106.0], [14.2, 106.0], [14.3, 106.0], [14.4, 106.0], [14.5, 106.0], [14.6, 106.0], [14.7, 106.0], [14.8, 106.0], [14.9, 106.0], [15.0, 106.0], [15.1, 106.0], [15.2, 106.0], [15.3, 106.0], [15.4, 106.0], [15.5, 106.0], [15.6, 106.0], [15.7, 106.0], [15.8, 106.0], [15.9, 106.0], [16.0, 433.0], [16.1, 433.0], [16.2, 433.0], [16.3, 433.0], [16.4, 433.0], [16.5, 433.0], [16.6, 433.0], [16.7, 433.0], [16.8, 433.0], [16.9, 433.0], [17.0, 433.0], [17.1, 433.0], [17.2, 433.0], [17.3, 433.0], [17.4, 433.0], [17.5, 433.0], [17.6, 433.0], [17.7, 433.0], [17.8, 433.0], [17.9, 433.0], [18.0, 457.0], [18.1, 457.0], [18.2, 457.0], [18.3, 457.0], [18.4, 457.0], [18.5, 457.0], [18.6, 457.0], [18.7, 457.0], [18.8, 457.0], [18.9, 457.0], [19.0, 457.0], [19.1, 457.0], [19.2, 457.0], [19.3, 457.0], [19.4, 457.0], [19.5, 457.0], [19.6, 457.0], [19.7, 457.0], [19.8, 457.0], [19.9, 457.0], [20.0, 543.0], [20.1, 543.0], [20.2, 543.0], [20.3, 543.0], [20.4, 543.0], [20.5, 543.0], [20.6, 543.0], [20.7, 543.0], [20.8, 543.0], [20.9, 543.0], [21.0, 543.0], [21.1, 543.0], [21.2, 543.0], [21.3, 543.0], [21.4, 543.0], [21.5, 543.0], [21.6, 543.0], [21.7, 543.0], [21.8, 543.0], [21.9, 543.0], [22.0, 557.0], [22.1, 557.0], [22.2, 557.0], [22.3, 557.0], [22.4, 557.0], [22.5, 557.0], [22.6, 557.0], [22.7, 557.0], [22.8, 557.0], [22.9, 557.0], [23.0, 557.0], [23.1, 557.0], [23.2, 557.0], [23.3, 557.0], [23.4, 557.0], [23.5, 557.0], [23.6, 557.0], [23.7, 557.0], [23.8, 557.0], [23.9, 557.0], [24.0, 567.0], [24.1, 567.0], [24.2, 567.0], [24.3, 567.0], [24.4, 567.0], [24.5, 567.0], [24.6, 567.0], [24.7, 567.0], [24.8, 567.0], [24.9, 567.0], [25.0, 567.0], [25.1, 567.0], [25.2, 567.0], [25.3, 567.0], [25.4, 567.0], [25.5, 567.0], [25.6, 567.0], [25.7, 567.0], [25.8, 567.0], [25.9, 567.0], [26.0, 640.0], [26.1, 640.0], [26.2, 640.0], [26.3, 640.0], [26.4, 640.0], [26.5, 640.0], [26.6, 640.0], [26.7, 640.0], [26.8, 640.0], [26.9, 640.0], [27.0, 640.0], [27.1, 640.0], [27.2, 640.0], [27.3, 640.0], [27.4, 640.0], [27.5, 640.0], [27.6, 640.0], [27.7, 640.0], [27.8, 640.0], [27.9, 640.0], [28.0, 923.0], [28.1, 923.0], [28.2, 923.0], [28.3, 923.0], [28.4, 923.0], [28.5, 923.0], [28.6, 923.0], [28.7, 923.0], [28.8, 923.0], [28.9, 923.0], [29.0, 923.0], [29.1, 923.0], [29.2, 923.0], [29.3, 923.0], [29.4, 923.0], [29.5, 923.0], [29.6, 923.0], [29.7, 923.0], [29.8, 923.0], [29.9, 923.0], [30.0, 950.0], [30.1, 950.0], [30.2, 950.0], [30.3, 950.0], [30.4, 950.0], [30.5, 950.0], [30.6, 950.0], [30.7, 950.0], [30.8, 950.0], [30.9, 950.0], [31.0, 950.0], [31.1, 950.0], [31.2, 950.0], [31.3, 950.0], [31.4, 950.0], [31.5, 950.0], [31.6, 950.0], [31.7, 950.0], [31.8, 950.0], [31.9, 950.0], [32.0, 992.0], [32.1, 992.0], [32.2, 992.0], [32.3, 992.0], [32.4, 992.0], [32.5, 992.0], [32.6, 992.0], [32.7, 992.0], [32.8, 992.0], [32.9, 992.0], [33.0, 992.0], [33.1, 992.0], [33.2, 992.0], [33.3, 992.0], [33.4, 992.0], [33.5, 992.0], [33.6, 992.0], [33.7, 992.0], [33.8, 992.0], [33.9, 992.0], [34.0, 1029.0], [34.1, 1029.0], [34.2, 1029.0], [34.3, 1029.0], [34.4, 1029.0], [34.5, 1029.0], [34.6, 1029.0], [34.7, 1029.0], [34.8, 1029.0], [34.9, 1029.0], [35.0, 1029.0], [35.1, 1029.0], [35.2, 1029.0], [35.3, 1029.0], [35.4, 1029.0], [35.5, 1029.0], [35.6, 1029.0], [35.7, 1029.0], [35.8, 1029.0], [35.9, 1029.0], [36.0, 1082.0], [36.1, 1082.0], [36.2, 1082.0], [36.3, 1082.0], [36.4, 1082.0], [36.5, 1082.0], [36.6, 1082.0], [36.7, 1082.0], [36.8, 1082.0], [36.9, 1082.0], [37.0, 1082.0], [37.1, 1082.0], [37.2, 1082.0], [37.3, 1082.0], [37.4, 1082.0], [37.5, 1082.0], [37.6, 1082.0], [37.7, 1082.0], [37.8, 1082.0], [37.9, 1082.0], [38.0, 1239.0], [38.1, 1239.0], [38.2, 1239.0], [38.3, 1239.0], [38.4, 1239.0], [38.5, 1239.0], [38.6, 1239.0], [38.7, 1239.0], [38.8, 1239.0], [38.9, 1239.0], [39.0, 1239.0], [39.1, 1239.0], [39.2, 1239.0], [39.3, 1239.0], [39.4, 1239.0], [39.5, 1239.0], [39.6, 1239.0], [39.7, 1239.0], [39.8, 1239.0], [39.9, 1239.0], [40.0, 1369.0], [40.1, 1369.0], [40.2, 1369.0], [40.3, 1369.0], [40.4, 1369.0], [40.5, 1369.0], [40.6, 1369.0], [40.7, 1369.0], [40.8, 1369.0], [40.9, 1369.0], [41.0, 1369.0], [41.1, 1369.0], [41.2, 1369.0], [41.3, 1369.0], [41.4, 1369.0], [41.5, 1369.0], [41.6, 1369.0], [41.7, 1369.0], [41.8, 1369.0], [41.9, 1369.0], [42.0, 1924.0], [42.1, 1924.0], [42.2, 1924.0], [42.3, 1924.0], [42.4, 1924.0], [42.5, 1924.0], [42.6, 1924.0], [42.7, 1924.0], [42.8, 1924.0], [42.9, 1924.0], [43.0, 1924.0], [43.1, 1924.0], [43.2, 1924.0], [43.3, 1924.0], [43.4, 1924.0], [43.5, 1924.0], [43.6, 1924.0], [43.7, 1924.0], [43.8, 1924.0], [43.9, 1924.0], [44.0, 2024.0], [44.1, 2024.0], [44.2, 2024.0], [44.3, 2024.0], [44.4, 2024.0], [44.5, 2024.0], [44.6, 2024.0], [44.7, 2024.0], [44.8, 2024.0], [44.9, 2024.0], [45.0, 2024.0], [45.1, 2024.0], [45.2, 2024.0], [45.3, 2024.0], [45.4, 2024.0], [45.5, 2024.0], [45.6, 2024.0], [45.7, 2024.0], [45.8, 2024.0], [45.9, 2024.0], [46.0, 2238.0], [46.1, 2238.0], [46.2, 2238.0], [46.3, 2238.0], [46.4, 2238.0], [46.5, 2238.0], [46.6, 2238.0], [46.7, 2238.0], [46.8, 2238.0], [46.9, 2238.0], [47.0, 2238.0], [47.1, 2238.0], [47.2, 2238.0], [47.3, 2238.0], [47.4, 2238.0], [47.5, 2238.0], [47.6, 2238.0], [47.7, 2238.0], [47.8, 2238.0], [47.9, 2238.0], [48.0, 2590.0], [48.1, 2590.0], [48.2, 2590.0], [48.3, 2590.0], [48.4, 2590.0], [48.5, 2590.0], [48.6, 2590.0], [48.7, 2590.0], [48.8, 2590.0], [48.9, 2590.0], [49.0, 2590.0], [49.1, 2590.0], [49.2, 2590.0], [49.3, 2590.0], [49.4, 2590.0], [49.5, 2590.0], [49.6, 2590.0], [49.7, 2590.0], [49.8, 2590.0], [49.9, 2590.0], [50.0, 2891.0], [50.1, 2891.0], [50.2, 2891.0], [50.3, 2891.0], [50.4, 2891.0], [50.5, 2891.0], [50.6, 2891.0], [50.7, 2891.0], [50.8, 2891.0], [50.9, 2891.0], [51.0, 2891.0], [51.1, 2891.0], [51.2, 2891.0], [51.3, 2891.0], [51.4, 2891.0], [51.5, 2891.0], [51.6, 2891.0], [51.7, 2891.0], [51.8, 2891.0], [51.9, 2891.0], [52.0, 3015.0], [52.1, 3015.0], [52.2, 3015.0], [52.3, 3015.0], [52.4, 3015.0], [52.5, 3015.0], [52.6, 3015.0], [52.7, 3015.0], [52.8, 3015.0], [52.9, 3015.0], [53.0, 3015.0], [53.1, 3015.0], [53.2, 3015.0], [53.3, 3015.0], [53.4, 3015.0], [53.5, 3015.0], [53.6, 3015.0], [53.7, 3015.0], [53.8, 3015.0], [53.9, 3015.0], [54.0, 3593.0], [54.1, 3593.0], [54.2, 3593.0], [54.3, 3593.0], [54.4, 3593.0], [54.5, 3593.0], [54.6, 3593.0], [54.7, 3593.0], [54.8, 3593.0], [54.9, 3593.0], [55.0, 3593.0], [55.1, 3593.0], [55.2, 3593.0], [55.3, 3593.0], [55.4, 3593.0], [55.5, 3593.0], [55.6, 3593.0], [55.7, 3593.0], [55.8, 3593.0], [55.9, 3593.0], [56.0, 4084.0], [56.1, 4084.0], [56.2, 4084.0], [56.3, 4084.0], [56.4, 4084.0], [56.5, 4084.0], [56.6, 4084.0], [56.7, 4084.0], [56.8, 4084.0], [56.9, 4084.0], [57.0, 4084.0], [57.1, 4084.0], [57.2, 4084.0], [57.3, 4084.0], [57.4, 4084.0], [57.5, 4084.0], [57.6, 4084.0], [57.7, 4084.0], [57.8, 4084.0], [57.9, 4084.0], [58.0, 4884.0], [58.1, 4884.0], [58.2, 4884.0], [58.3, 4884.0], [58.4, 4884.0], [58.5, 4884.0], [58.6, 4884.0], [58.7, 4884.0], [58.8, 4884.0], [58.9, 4884.0], [59.0, 4884.0], [59.1, 4884.0], [59.2, 4884.0], [59.3, 4884.0], [59.4, 4884.0], [59.5, 4884.0], [59.6, 4884.0], [59.7, 4884.0], [59.8, 4884.0], [59.9, 4884.0], [60.0, 4902.0], [60.1, 4902.0], [60.2, 4902.0], [60.3, 4902.0], [60.4, 4902.0], [60.5, 4902.0], [60.6, 4902.0], [60.7, 4902.0], [60.8, 4902.0], [60.9, 4902.0], [61.0, 4902.0], [61.1, 4902.0], [61.2, 4902.0], [61.3, 4902.0], [61.4, 4902.0], [61.5, 4902.0], [61.6, 4902.0], [61.7, 4902.0], [61.8, 4902.0], [61.9, 4902.0], [62.0, 5022.0], [62.1, 5022.0], [62.2, 5022.0], [62.3, 5022.0], [62.4, 5022.0], [62.5, 5022.0], [62.6, 5022.0], [62.7, 5022.0], [62.8, 5022.0], [62.9, 5022.0], [63.0, 5022.0], [63.1, 5022.0], [63.2, 5022.0], [63.3, 5022.0], [63.4, 5022.0], [63.5, 5022.0], [63.6, 5022.0], [63.7, 5022.0], [63.8, 5022.0], [63.9, 5022.0], [64.0, 5040.0], [64.1, 5040.0], [64.2, 5040.0], [64.3, 5040.0], [64.4, 5040.0], [64.5, 5040.0], [64.6, 5040.0], [64.7, 5040.0], [64.8, 5040.0], [64.9, 5040.0], [65.0, 5040.0], [65.1, 5040.0], [65.2, 5040.0], [65.3, 5040.0], [65.4, 5040.0], [65.5, 5040.0], [65.6, 5040.0], [65.7, 5040.0], [65.8, 5040.0], [65.9, 5040.0], [66.0, 5069.0], [66.1, 5069.0], [66.2, 5069.0], [66.3, 5069.0], [66.4, 5069.0], [66.5, 5069.0], [66.6, 5069.0], [66.7, 5069.0], [66.8, 5069.0], [66.9, 5069.0], [67.0, 5069.0], [67.1, 5069.0], [67.2, 5069.0], [67.3, 5069.0], [67.4, 5069.0], [67.5, 5069.0], [67.6, 5069.0], [67.7, 5069.0], [67.8, 5069.0], [67.9, 5069.0], [68.0, 5403.0], [68.1, 5403.0], [68.2, 5403.0], [68.3, 5403.0], [68.4, 5403.0], [68.5, 5403.0], [68.6, 5403.0], [68.7, 5403.0], [68.8, 5403.0], [68.9, 5403.0], [69.0, 5403.0], [69.1, 5403.0], [69.2, 5403.0], [69.3, 5403.0], [69.4, 5403.0], [69.5, 5403.0], [69.6, 5403.0], [69.7, 5403.0], [69.8, 5403.0], [69.9, 5403.0], [70.0, 5448.0], [70.1, 5448.0], [70.2, 5448.0], [70.3, 5448.0], [70.4, 5448.0], [70.5, 5448.0], [70.6, 5448.0], [70.7, 5448.0], [70.8, 5448.0], [70.9, 5448.0], [71.0, 5448.0], [71.1, 5448.0], [71.2, 5448.0], [71.3, 5448.0], [71.4, 5448.0], [71.5, 5448.0], [71.6, 5448.0], [71.7, 5448.0], [71.8, 5448.0], [71.9, 5448.0], [72.0, 5468.0], [72.1, 5468.0], [72.2, 5468.0], [72.3, 5468.0], [72.4, 5468.0], [72.5, 5468.0], [72.6, 5468.0], [72.7, 5468.0], [72.8, 5468.0], [72.9, 5468.0], [73.0, 5468.0], [73.1, 5468.0], [73.2, 5468.0], [73.3, 5468.0], [73.4, 5468.0], [73.5, 5468.0], [73.6, 5468.0], [73.7, 5468.0], [73.8, 5468.0], [73.9, 5468.0], [74.0, 5474.0], [74.1, 5474.0], [74.2, 5474.0], [74.3, 5474.0], [74.4, 5474.0], [74.5, 5474.0], [74.6, 5474.0], [74.7, 5474.0], [74.8, 5474.0], [74.9, 5474.0], [75.0, 5474.0], [75.1, 5474.0], [75.2, 5474.0], [75.3, 5474.0], [75.4, 5474.0], [75.5, 5474.0], [75.6, 5474.0], [75.7, 5474.0], [75.8, 5474.0], [75.9, 5474.0], [76.0, 5477.0], [76.1, 5477.0], [76.2, 5477.0], [76.3, 5477.0], [76.4, 5477.0], [76.5, 5477.0], [76.6, 5477.0], [76.7, 5477.0], [76.8, 5477.0], [76.9, 5477.0], [77.0, 5477.0], [77.1, 5477.0], [77.2, 5477.0], [77.3, 5477.0], [77.4, 5477.0], [77.5, 5477.0], [77.6, 5477.0], [77.7, 5477.0], [77.8, 5477.0], [77.9, 5477.0], [78.0, 6995.0], [78.1, 6995.0], [78.2, 6995.0], [78.3, 6995.0], [78.4, 6995.0], [78.5, 6995.0], [78.6, 6995.0], [78.7, 6995.0], [78.8, 6995.0], [78.9, 6995.0], [79.0, 6995.0], [79.1, 6995.0], [79.2, 6995.0], [79.3, 6995.0], [79.4, 6995.0], [79.5, 6995.0], [79.6, 6995.0], [79.7, 6995.0], [79.8, 6995.0], [79.9, 6995.0], [80.0, 7075.0], [80.1, 7075.0], [80.2, 7075.0], [80.3, 7075.0], [80.4, 7075.0], [80.5, 7075.0], [80.6, 7075.0], [80.7, 7075.0], [80.8, 7075.0], [80.9, 7075.0], [81.0, 7075.0], [81.1, 7075.0], [81.2, 7075.0], [81.3, 7075.0], [81.4, 7075.0], [81.5, 7075.0], [81.6, 7075.0], [81.7, 7075.0], [81.8, 7075.0], [81.9, 7075.0], [82.0, 7402.0], [82.1, 7402.0], [82.2, 7402.0], [82.3, 7402.0], [82.4, 7402.0], [82.5, 7402.0], [82.6, 7402.0], [82.7, 7402.0], [82.8, 7402.0], [82.9, 7402.0], [83.0, 7402.0], [83.1, 7402.0], [83.2, 7402.0], [83.3, 7402.0], [83.4, 7402.0], [83.5, 7402.0], [83.6, 7402.0], [83.7, 7402.0], [83.8, 7402.0], [83.9, 7402.0], [84.0, 7474.0], [84.1, 7474.0], [84.2, 7474.0], [84.3, 7474.0], [84.4, 7474.0], [84.5, 7474.0], [84.6, 7474.0], [84.7, 7474.0], [84.8, 7474.0], [84.9, 7474.0], [85.0, 7474.0], [85.1, 7474.0], [85.2, 7474.0], [85.3, 7474.0], [85.4, 7474.0], [85.5, 7474.0], [85.6, 7474.0], [85.7, 7474.0], [85.8, 7474.0], [85.9, 7474.0], [86.0, 7550.0], [86.1, 7550.0], [86.2, 7550.0], [86.3, 7550.0], [86.4, 7550.0], [86.5, 7550.0], [86.6, 7550.0], [86.7, 7550.0], [86.8, 7550.0], [86.9, 7550.0], [87.0, 7550.0], [87.1, 7550.0], [87.2, 7550.0], [87.3, 7550.0], [87.4, 7550.0], [87.5, 7550.0], [87.6, 7550.0], [87.7, 7550.0], [87.8, 7550.0], [87.9, 7550.0], [88.0, 8609.0], [88.1, 8609.0], [88.2, 8609.0], [88.3, 8609.0], [88.4, 8609.0], [88.5, 8609.0], [88.6, 8609.0], [88.7, 8609.0], [88.8, 8609.0], [88.9, 8609.0], [89.0, 8609.0], [89.1, 8609.0], [89.2, 8609.0], [89.3, 8609.0], [89.4, 8609.0], [89.5, 8609.0], [89.6, 8609.0], [89.7, 8609.0], [89.8, 8609.0], [89.9, 8609.0], [90.0, 9070.0], [90.1, 9070.0], [90.2, 9070.0], [90.3, 9070.0], [90.4, 9070.0], [90.5, 9070.0], [90.6, 9070.0], [90.7, 9070.0], [90.8, 9070.0], [90.9, 9070.0], [91.0, 9070.0], [91.1, 9070.0], [91.2, 9070.0], [91.3, 9070.0], [91.4, 9070.0], [91.5, 9070.0], [91.6, 9070.0], [91.7, 9070.0], [91.8, 9070.0], [91.9, 9070.0], [92.0, 9287.0], [92.1, 9287.0], [92.2, 9287.0], [92.3, 9287.0], [92.4, 9287.0], [92.5, 9287.0], [92.6, 9287.0], [92.7, 9287.0], [92.8, 9287.0], [92.9, 9287.0], [93.0, 9287.0], [93.1, 9287.0], [93.2, 9287.0], [93.3, 9287.0], [93.4, 9287.0], [93.5, 9287.0], [93.6, 9287.0], [93.7, 9287.0], [93.8, 9287.0], [93.9, 9287.0], [94.0, 9676.0], [94.1, 9676.0], [94.2, 9676.0], [94.3, 9676.0], [94.4, 9676.0], [94.5, 9676.0], [94.6, 9676.0], [94.7, 9676.0], [94.8, 9676.0], [94.9, 9676.0], [95.0, 9676.0], [95.1, 9676.0], [95.2, 9676.0], [95.3, 9676.0], [95.4, 9676.0], [95.5, 9676.0], [95.6, 9676.0], [95.7, 9676.0], [95.8, 9676.0], [95.9, 9676.0], [96.0, 10427.0], [96.1, 10427.0], [96.2, 10427.0], [96.3, 10427.0], [96.4, 10427.0], [96.5, 10427.0], [96.6, 10427.0], [96.7, 10427.0], [96.8, 10427.0], [96.9, 10427.0], [97.0, 10427.0], [97.1, 10427.0], [97.2, 10427.0], [97.3, 10427.0], [97.4, 10427.0], [97.5, 10427.0], [97.6, 10427.0], [97.7, 10427.0], [97.8, 10427.0], [97.9, 10427.0], [98.0, 11272.0], [98.1, 11272.0], [98.2, 11272.0], [98.3, 11272.0], [98.4, 11272.0], [98.5, 11272.0], [98.6, 11272.0], [98.7, 11272.0], [98.8, 11272.0], [98.9, 11272.0], [99.0, 11272.0], [99.1, 11272.0], [99.2, 11272.0], [99.3, 11272.0], [99.4, 11272.0], [99.5, 11272.0], [99.6, 11272.0], [99.7, 11272.0], [99.8, 11272.0], [99.9, 11272.0]], "isOverall": false, "label": "Bot Service: Message No", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 8.0, "series": [{"data": [[0.0, 1.0], [600.0, 1.0], [304100.0, 1.0], [1000.0, 1.0], [1100.0, 2.0], [1500.0, 1.0], [1700.0, 1.0], [2000.0, 1.0], [309900.0, 1.0], [2600.0, 1.0], [2700.0, 4.0], [2800.0, 3.0], [2900.0, 2.0], [3100.0, 2.0], [3300.0, 1.0], [3200.0, 1.0], [3500.0, 1.0], [3900.0, 3.0], [4100.0, 4.0], [4300.0, 1.0], [4600.0, 1.0], [4700.0, 1.0], [4800.0, 1.0], [309800.0, 1.0], [5100.0, 2.0], [5000.0, 2.0], [5300.0, 1.0], [5500.0, 3.0], [5400.0, 1.0], [5700.0, 2.0], [5800.0, 1.0], [6000.0, 1.0], [5900.0, 1.0], [6200.0, 2.0], [6300.0, 1.0], [6600.0, 1.0], [6400.0, 3.0], [7100.0, 1.0], [7000.0, 1.0], [7300.0, 1.0], [7400.0, 1.0], [7200.0, 1.0], [7600.0, 1.0], [8000.0, 1.0], [8100.0, 1.0], [8400.0, 1.0], [8300.0, 2.0], [8700.0, 1.0], [8600.0, 1.0], [8200.0, 1.0], [8800.0, 1.0], [9100.0, 2.0], [9300.0, 2.0], [308500.0, 1.0], [306900.0, 1.0], [304500.0, 1.0], [303700.0, 1.0], [10500.0, 2.0], [10600.0, 1.0], [11000.0, 1.0], [12100.0, 1.0], [13100.0, 1.0], [13600.0, 1.0], [14500.0, 1.0], [15200.0, 1.0], [301200.0, 1.0], [302000.0, 1.0], [304400.0, 1.0], [302300.0, 2.0], [303900.0, 1.0], [305500.0, 1.0], [304700.0, 1.0], [308600.0, 1.0], [400.0, 1.0]], "isOverall": false, "label": "Bot Service: Message Blind Spots", "isController": false}, {"data": [[8600.0, 1.0], [2100.0, 1.0], [0.0, 8.0], [2200.0, 2.0], [700.0, 4.0], [2900.0, 1.0], [3000.0, 2.0], [3300.0, 2.0], [3200.0, 1.0], [800.0, 3.0], [3400.0, 1.0], [900.0, 6.0], [3600.0, 1.0], [4200.0, 3.0], [4300.0, 2.0], [4400.0, 1.0], [4800.0, 1.0], [4700.0, 2.0], [1200.0, 1.0], [1300.0, 2.0], [5300.0, 1.0], [1900.0, 4.0]], "isOverall": false, "label": "Bot Service: Message Attractor", "isController": false}, {"data": [[8300.0, 1.0], [9700.0, 1.0], [9800.0, 1.0], [11200.0, 1.0], [3000.0, 1.0], [3100.0, 2.0], [3300.0, 1.0], [3200.0, 4.0], [3400.0, 6.0], [3500.0, 5.0], [3600.0, 2.0], [3700.0, 1.0], [3800.0, 5.0], [3900.0, 2.0], [4100.0, 2.0], [4200.0, 2.0], [4300.0, 1.0], [4500.0, 1.0], [4400.0, 2.0], [4600.0, 3.0], [4700.0, 1.0], [4900.0, 1.0], [6600.0, 1.0], [6800.0, 2.0], [7000.0, 1.0]], "isOverall": false, "label": "Bot Service: Conversation Update", "isController": false}, {"data": [[8700.0, 1.0], [9600.0, 1.0], [9500.0, 1.0], [10000.0, 1.0], [11700.0, 1.0], [13300.0, 1.0], [1000.0, 1.0], [19600.0, 1.0], [1300.0, 2.0], [1400.0, 1.0], [1600.0, 1.0], [1800.0, 1.0], [2000.0, 1.0], [2100.0, 1.0], [2200.0, 1.0], [2400.0, 1.0], [2600.0, 1.0], [2800.0, 2.0], [2900.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [3500.0, 1.0], [3600.0, 1.0], [3800.0, 1.0], [3900.0, 1.0], [4200.0, 1.0], [4500.0, 1.0], [4800.0, 3.0], [5000.0, 1.0], [5200.0, 2.0], [5400.0, 2.0], [5500.0, 2.0], [5600.0, 2.0], [5900.0, 2.0], [6400.0, 1.0], [6500.0, 3.0], [6900.0, 1.0], [7100.0, 1.0], [8100.0, 1.0]], "isOverall": false, "label": "Bot Service: Message search Ongs Hat", "isController": false}, {"data": [[8600.0, 1.0], [0.0, 6.0], [9000.0, 1.0], [9200.0, 1.0], [9600.0, 1.0], [600.0, 1.0], [10400.0, 1.0], [11200.0, 1.0], [900.0, 3.0], [1000.0, 2.0], [1200.0, 1.0], [1300.0, 1.0], [100.0, 2.0], [1900.0, 1.0], [2000.0, 1.0], [2200.0, 1.0], [2500.0, 1.0], [2800.0, 1.0], [3000.0, 1.0], [3500.0, 1.0], [4000.0, 1.0], [4800.0, 1.0], [5000.0, 3.0], [4900.0, 1.0], [5400.0, 5.0], [400.0, 2.0], [6900.0, 1.0], [7000.0, 1.0], [7400.0, 2.0], [7500.0, 1.0], [500.0, 3.0]], "isOverall": false, "label": "Bot Service: Message No", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 309900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 7.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 198.0, "series": [{"data": [[0.0, 7.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 18.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 198.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 77.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 2.333333333333333, "minX": 1.57421328E12, "maxY": 48.056277056277075, "series": [{"data": [[1.57421328E12, 48.056277056277075], [1.57421364E12, 2.333333333333333], [1.57421334E12, 23.809523809523807], [1.57421358E12, 10.04761904761905]], "isOverall": false, "label": "Bot Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57421364E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 21.0, "minX": 2.0, "maxY": 309879.5, "series": [{"data": [[9.0, 303794.0], [39.0, 5051.0], [10.0, 306958.0], [43.0, 5789.0], [42.0, 9159.0], [45.0, 3820.0], [11.0, 307302.0], [47.0, 7008.0], [49.0, 8299.583333333332], [48.0, 7691.75], [12.0, 305580.0], [3.0, 309879.5], [50.0, 5404.847457627118], [13.0, 302006.0], [14.0, 301288.0], [15.0, 303910.0], [16.0, 302338.0], [4.0, 303958.5], [17.0, 1125.0], [22.0, 3503.0], [29.0, 3240.0]], "isOverall": false, "label": "Bot Service: Message Blind Spots", "isController": false}, {"data": [[42.13, 53748.06999999999]], "isOverall": false, "label": "Bot Service: Message Blind Spots-Aggregated", "isController": false}, {"data": [[2.0, 1966.5], [3.0, 981.0], [4.0, 21.0], [5.0, 1946.0], [6.0, 953.0], [7.0, 26.0], [8.0, 27.0], [9.0, 1963.0], [10.0, 972.0], [11.0, 904.0], [12.0, 743.0], [13.0, 21.0], [14.0, 31.0], [15.0, 33.0], [16.0, 23.0], [17.0, 39.0], [18.0, 4290.0], [19.0, 815.0], [20.0, 4722.0], [21.0, 4364.0], [22.0, 919.0], [23.0, 3320.0], [24.0, 2221.0], [25.0, 1206.0], [26.0, 4232.0], [27.0, 2187.0], [28.0, 4467.0], [29.0, 811.0], [30.0, 3673.0], [31.0, 3498.0], [33.0, 854.0], [32.0, 958.0], [35.0, 4366.0], [34.0, 777.0], [37.0, 718.0], [36.0, 739.0], [39.0, 2975.0], [38.0, 3085.0], [41.0, 8661.0], [40.0, 3048.0], [43.0, 2247.0], [42.0, 3281.0], [45.0, 3348.0], [44.0, 1372.0], [47.0, 4212.0], [46.0, 4753.0], [49.0, 4853.0], [48.0, 5392.0], [50.0, 1318.0]], "isOverall": false, "label": "Bot Service: Message Attractor", "isController": false}, {"data": [[25.52, 2205.96]], "isOverall": false, "label": "Bot Service: Message Attractor-Aggregated", "isController": false}, {"data": [[50.0, 4541.620000000001]], "isOverall": false, "label": "Bot Service: Conversation Update", "isController": false}, {"data": [[50.0, 4541.620000000001]], "isOverall": false, "label": "Bot Service: Conversation Update-Aggregated", "isController": false}, {"data": [[40.0, 19649.0], [50.0, 5018.34693877551]], "isOverall": false, "label": "Bot Service: Message search Ongs Hat", "isController": false}, {"data": [[49.8, 5310.96]], "isOverall": false, "label": "Bot Service: Message search Ongs Hat-Aggregated", "isController": false}, {"data": [[2.0, 971.0], [37.0, 10849.5], [39.0, 7269.0], [38.0, 7253.0], [40.0, 7402.0], [43.0, 3218.0], [42.0, 5117.5], [45.0, 2953.0], [47.0, 8609.0], [49.0, 5175.0], [48.0, 3565.0], [50.0, 5412.2], [4.0, 743.0], [8.0, 535.75], [10.0, 678.0], [11.0, 40.0], [12.0, 44.0], [13.0, 25.0], [14.0, 43.0], [15.0, 45.0], [16.0, 640.0], [17.0, 54.0], [28.0, 557.0], [29.0, 4307.5], [30.0, 1924.0]], "isOverall": false, "label": "Bot Service: Message No", "isController": false}, {"data": [[31.160000000000007, 3612.4399999999996]], "isOverall": false, "label": "Bot Service: Message No-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 50.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 0.0, "minX": 1.57421328E12, "maxY": 4116.183333333333, "series": [{"data": [[1.57421328E12, 4116.183333333333], [1.57421364E12, 36.96666666666667], [1.57421334E12, 142.36666666666667], [1.57421358E12, 233.35]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.57421328E12, 0.0], [1.57421364E12, 0.0], [1.57421334E12, 0.0], [1.57421358E12, 0.0]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57421364E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 415.8571428571429, "minX": 1.57421328E12, "maxY": 309923.0, "series": [{"data": [[1.57421328E12, 5974.0123456790125], [1.57421364E12, 309923.0], [1.57421334E12, 2622.6666666666665], [1.57421358E12, 304874.73333333334]], "isOverall": false, "label": "Bot Service: Message Blind Spots", "isController": false}, {"data": [[1.57421328E12, 3022.75], [1.57421364E12, 1638.0], [1.57421334E12, 2661.857142857143], [1.57421358E12, 589.4615384615383]], "isOverall": false, "label": "Bot Service: Message Attractor", "isController": false}, {"data": [[1.57421328E12, 4541.620000000001]], "isOverall": false, "label": "Bot Service: Conversation Update", "isController": false}, {"data": [[1.57421328E12, 5310.96]], "isOverall": false, "label": "Bot Service: Message search Ongs Hat", "isController": false}, {"data": [[1.57421328E12, 5454.399999999999], [1.57421364E12, 971.0], [1.57421334E12, 2306.5], [1.57421358E12, 415.8571428571429]], "isOverall": false, "label": "Bot Service: Message No", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57421364E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57421328E12, "maxY": 4.9E-324, "series": [{"data": [[1.57421328E12, 0.0], [1.57421364E12, 0.0], [1.57421334E12, 0.0], [1.57421358E12, 0.0]], "isOverall": false, "label": "Bot Service: Message Blind Spots", "isController": false}, {"data": [[1.57421328E12, 0.0], [1.57421364E12, 0.0], [1.57421334E12, 0.0], [1.57421358E12, 0.0]], "isOverall": false, "label": "Bot Service: Message Attractor", "isController": false}, {"data": [[1.57421328E12, 0.0]], "isOverall": false, "label": "Bot Service: Conversation Update", "isController": false}, {"data": [[1.57421328E12, 0.0]], "isOverall": false, "label": "Bot Service: Message search Ongs Hat", "isController": false}, {"data": [[1.57421328E12, 0.0], [1.57421364E12, 0.0], [1.57421334E12, 0.0], [1.57421358E12, 0.0]], "isOverall": false, "label": "Bot Service: Message No", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57421364E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.57421328E12, "maxY": 4.9E-324, "series": [{"data": [[1.57421328E12, 0.0], [1.57421364E12, 0.0], [1.57421334E12, 0.0], [1.57421358E12, 0.0]], "isOverall": false, "label": "Bot Service: Message Blind Spots", "isController": false}, {"data": [[1.57421328E12, 0.0], [1.57421364E12, 0.0], [1.57421334E12, 0.0], [1.57421358E12, 0.0]], "isOverall": false, "label": "Bot Service: Message Attractor", "isController": false}, {"data": [[1.57421328E12, 0.0]], "isOverall": false, "label": "Bot Service: Conversation Update", "isController": false}, {"data": [[1.57421328E12, 0.0]], "isOverall": false, "label": "Bot Service: Message search Ongs Hat", "isController": false}, {"data": [[1.57421328E12, 0.0], [1.57421364E12, 0.0], [1.57421334E12, 0.0], [1.57421358E12, 0.0]], "isOverall": false, "label": "Bot Service: Message No", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57421364E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.57421328E12, "maxY": 19649.0, "series": [{"data": [[1.57421328E12, 19649.0], [1.57421364E12, 992.0], [1.57421334E12, 5022.0], [1.57421358E12, 1369.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.57421328E12, 82.0], [1.57421364E12, 950.0], [1.57421334E12, 54.0], [1.57421358E12, 40.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.57421328E12, 9566.2], [1.57421364E12, 992.0], [1.57421334E12, 5022.0], [1.57421358E12, 1369.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.57421328E12, 15197.919999999998], [1.57421364E12, 992.0], [1.57421334E12, 5022.0], [1.57421358E12, 1369.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.57421328E12, 11212.899999999998], [1.57421364E12, 992.0], [1.57421334E12, 5022.0], [1.57421358E12, 1369.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57421364E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 36.0, "minX": 1.0, "maxY": 154626.5, "series": [{"data": [[8.0, 5556.0], [4.0, 4476.0], [36.0, 3544.0], [9.0, 5542.5], [5.0, 2324.0], [10.0, 3727.0], [11.0, 4681.0], [6.0, 4933.0], [12.0, 3503.0], [3.0, 49.5], [7.0, 4702.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 1705.0], [1.0, 152142.0], [2.0, 1469.0], [4.0, 152885.0], [9.0, 4431.5], [10.0, 1034.5], [5.0, 152099.0], [11.0, 3048.0], [6.0, 154626.5], [12.0, 3320.0], [3.0, 36.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 4.9E-324, "series": [{"data": [[8.0, 0.0], [4.0, 0.0], [36.0, 0.0], [9.0, 0.0], [5.0, 0.0], [10.0, 0.0], [11.0, 0.0], [6.0, 0.0], [12.0, 0.0], [3.0, 0.0], [7.0, 0.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 0.0], [1.0, 0.0], [2.0, 0.0], [4.0, 0.0], [9.0, 0.0], [10.0, 0.0], [5.0, 0.0], [11.0, 0.0], [6.0, 0.0], [12.0, 0.0], [3.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 36.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 0.05, "minX": 1.57421328E12, "maxY": 4.35, "series": [{"data": [[1.57421328E12, 4.35], [1.57421364E12, 0.05], [1.57421334E12, 0.11666666666666667], [1.57421358E12, 0.48333333333333334]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57421364E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.57421328E12, "maxY": 3.85, "series": [{"data": [[1.57421328E12, 3.85], [1.57421364E12, 0.1], [1.57421334E12, 0.35], [1.57421358E12, 0.7]], "isOverall": false, "label": "", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.57421364E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.57421328E12, "maxY": 1.25, "series": [{"data": [[1.57421328E12, 0.3333333333333333], [1.57421364E12, 0.05], [1.57421334E12, 0.23333333333333334], [1.57421358E12, 0.21666666666666667]], "isOverall": false, "label": "Bot Service: Message Attractor-failure", "isController": false}, {"data": [[1.57421328E12, 0.5], [1.57421364E12, 0.03333333333333333], [1.57421334E12, 0.06666666666666667], [1.57421358E12, 0.15]], "isOverall": false, "label": "Bot Service: Message No-success", "isController": false}, {"data": [[1.57421358E12, 0.08333333333333333]], "isOverall": false, "label": "Bot Service: Message No-failure", "isController": false}, {"data": [[1.57421328E12, 0.8333333333333334]], "isOverall": false, "label": "Bot Service: Conversation Update-success", "isController": false}, {"data": [[1.57421328E12, 0.8333333333333334]], "isOverall": false, "label": "Bot Service: Message search Ongs Hat-success", "isController": false}, {"data": [[1.57421328E12, 0.1], [1.57421364E12, 0.016666666666666666], [1.57421358E12, 0.25]], "isOverall": false, "label": "Bot Service: Message Blind Spots-failure", "isController": false}, {"data": [[1.57421328E12, 1.25], [1.57421334E12, 0.05]], "isOverall": false, "label": "Bot Service: Message Blind Spots-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57421364E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.57421328E12, "maxY": 3.4166666666666665, "series": [{"data": [[1.57421328E12, 3.4166666666666665], [1.57421364E12, 0.03333333333333333], [1.57421334E12, 0.11666666666666667], [1.57421358E12, 0.15]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.57421328E12, 0.43333333333333335], [1.57421364E12, 0.06666666666666667], [1.57421334E12, 0.23333333333333334], [1.57421358E12, 0.55]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.57421364E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

